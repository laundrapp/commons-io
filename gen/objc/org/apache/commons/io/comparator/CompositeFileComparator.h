//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/comparator/CompositeFileComparator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorCompositeFileComparator")
#ifdef RESTRICT_OrgApacheCommonsIoComparatorCompositeFileComparator
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorCompositeFileComparator 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorCompositeFileComparator 1
#endif
#undef RESTRICT_OrgApacheCommonsIoComparatorCompositeFileComparator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoComparatorCompositeFileComparator_) && (INCLUDE_ALL_OrgApacheCommonsIoComparatorCompositeFileComparator || defined(INCLUDE_OrgApacheCommonsIoComparatorCompositeFileComparator))
#define OrgApacheCommonsIoComparatorCompositeFileComparator_

#define RESTRICT_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#define INCLUDE_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#include "org/apache/commons/io/comparator/AbstractFileComparator.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSObjectArray;
@class JavaIoFile;
@protocol JavaLangIterable;

/*!
 @brief Compare two files using a set of delegate file <code>Comparator</code>.
 <p>
  This comparator can be used to sort lists or arrays of files
  by combining a number other comparators. 
 <p>
  Example of sorting a list of files by type (i.e. directory or file)
  and then by name: 
 @code

        CompositeFileComparator comparator =
                        new CompositeFileComparator(
                                    DirectoryFileComparator.DIRECTORY_COMPARATOR,
                                    NameFileComparator.NAME_COMPARATOR);
        List&lt;File&gt; list = ...
        comparator.sort(list); 
  
@endcode
 @version $Id$
 @since 2.0
 */
@interface OrgApacheCommonsIoComparatorCompositeFileComparator : OrgApacheCommonsIoComparatorAbstractFileComparator < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Create a composite comparator for the set of delegate comparators.
 @param delegates The delegate file comparators
 */
- (instancetype __nonnull)initWithJavaUtilComparatorArray:(IOSObjectArray *)delegates;

/*!
 @brief Create a composite comparator for the set of delegate comparators.
 @param delegates The delegate file comparators
 */
- (instancetype __nonnull)initWithJavaLangIterable:(id<JavaLangIterable>)delegates;

/*!
 @brief Compare the two files using delegate comparators.
 @param file1 The first file to compare
 @param file2 The second file to compare
 @return the first non-zero result returned from
  the delegate comparators or zero.
 */
- (jint)compareWithId:(JavaIoFile *)file1
               withId:(JavaIoFile *)file2;

/*!
 @brief String representation of this file comparator.
 @return String representation of this file comparator
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoComparatorCompositeFileComparator)

FOUNDATION_EXPORT void OrgApacheCommonsIoComparatorCompositeFileComparator_initWithJavaUtilComparatorArray_(OrgApacheCommonsIoComparatorCompositeFileComparator *self, IOSObjectArray *delegates);

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorCompositeFileComparator *new_OrgApacheCommonsIoComparatorCompositeFileComparator_initWithJavaUtilComparatorArray_(IOSObjectArray *delegates) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorCompositeFileComparator *create_OrgApacheCommonsIoComparatorCompositeFileComparator_initWithJavaUtilComparatorArray_(IOSObjectArray *delegates);

FOUNDATION_EXPORT void OrgApacheCommonsIoComparatorCompositeFileComparator_initWithJavaLangIterable_(OrgApacheCommonsIoComparatorCompositeFileComparator *self, id<JavaLangIterable> delegates);

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorCompositeFileComparator *new_OrgApacheCommonsIoComparatorCompositeFileComparator_initWithJavaLangIterable_(id<JavaLangIterable> delegates) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorCompositeFileComparator *create_OrgApacheCommonsIoComparatorCompositeFileComparator_initWithJavaLangIterable_(id<JavaLangIterable> delegates);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoComparatorCompositeFileComparator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorCompositeFileComparator")
