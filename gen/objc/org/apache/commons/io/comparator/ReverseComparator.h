//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/comparator/ReverseComparator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorReverseComparator")
#ifdef RESTRICT_OrgApacheCommonsIoComparatorReverseComparator
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorReverseComparator 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorReverseComparator 1
#endif
#undef RESTRICT_OrgApacheCommonsIoComparatorReverseComparator

#if !defined (OrgApacheCommonsIoComparatorReverseComparator_) && (INCLUDE_ALL_OrgApacheCommonsIoComparatorReverseComparator || defined(INCLUDE_OrgApacheCommonsIoComparatorReverseComparator))
#define OrgApacheCommonsIoComparatorReverseComparator_

#define RESTRICT_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#define INCLUDE_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#include "org/apache/commons/io/comparator/AbstractFileComparator.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;
@protocol JavaUtilComparator;

/*!
 @brief Reverses the result of comparing two objects using
  the delegate <code>Comparator</code>.
 @version $Id$
 @since 1.4
 */
@interface OrgApacheCommonsIoComparatorReverseComparator : OrgApacheCommonsIoComparatorAbstractFileComparator < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Construct an instance with the sepecified delegate <code>Comparator</code>.
 @param delegate The comparator to delegate to
 */
- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)delegate;

/*!
 @brief Compare using the delegate Comparator, but reversing the result.
 @param file1 The first file to compare
 @param file2 The second file to compare
 @return the result from the delegate <code>Object)</code>
  reversing the value (i.e. positive becomes negative and vice versa)
 */
- (jint)compareWithId:(JavaIoFile *)file1
               withId:(JavaIoFile *)file2;

/*!
 @brief String representation of this file comparator.
 @return String representation of this file comparator
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoComparatorReverseComparator)

FOUNDATION_EXPORT void OrgApacheCommonsIoComparatorReverseComparator_initWithJavaUtilComparator_(OrgApacheCommonsIoComparatorReverseComparator *self, id<JavaUtilComparator> delegate);

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorReverseComparator *new_OrgApacheCommonsIoComparatorReverseComparator_initWithJavaUtilComparator_(id<JavaUtilComparator> delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorReverseComparator *create_OrgApacheCommonsIoComparatorReverseComparator_initWithJavaUtilComparator_(id<JavaUtilComparator> delegate);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoComparatorReverseComparator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorReverseComparator")
