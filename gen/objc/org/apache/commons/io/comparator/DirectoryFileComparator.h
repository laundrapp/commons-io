//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/comparator/DirectoryFileComparator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorDirectoryFileComparator")
#ifdef RESTRICT_OrgApacheCommonsIoComparatorDirectoryFileComparator
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorDirectoryFileComparator 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorDirectoryFileComparator 1
#endif
#undef RESTRICT_OrgApacheCommonsIoComparatorDirectoryFileComparator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoComparatorDirectoryFileComparator_) && (INCLUDE_ALL_OrgApacheCommonsIoComparatorDirectoryFileComparator || defined(INCLUDE_OrgApacheCommonsIoComparatorDirectoryFileComparator))
#define OrgApacheCommonsIoComparatorDirectoryFileComparator_

#define RESTRICT_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#define INCLUDE_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#include "org/apache/commons/io/comparator/AbstractFileComparator.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;
@protocol JavaUtilComparator;

/*!
 @brief Compare two files using the <code>File.isDirectory()</code> method.
 <p>
  This comparator can be used to sort lists or arrays by directories and files. 
 <p>
  Example of sorting a list of files/directories using the 
 <code>DIRECTORY_COMPARATOR</code> singleton instance: 
 @code

        List&lt;File&gt; list = ...
        DirectoryFileComparator.DIRECTORY_COMPARATOR.sort(list); 
  
@endcode
  <p>
  Example of doing a <i>reverse</i> sort of an array of files/directories using the 
 <code>DIRECTORY_REVERSE</code> singleton instance: 
 @code

        File[] array = ...
        DirectoryFileComparator.DIRECTORY_REVERSE.sort(array); 
  
@endcode
  <p>
 @version $Id$
 @since 2.0
 */
@interface OrgApacheCommonsIoComparatorDirectoryFileComparator : OrgApacheCommonsIoComparatorAbstractFileComparator < JavaIoSerializable >

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Compare the two files using the <code>File.isDirectory()</code> method.
 @param file1 The first file to compare
 @param file2 The second file to compare
 @return the result of calling file1's 
 <code>File.compareTo(File)</code> with file2 as the parameter.
 */
- (jint)compareWithId:(JavaIoFile *)file1
               withId:(JavaIoFile *)file2;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoComparatorDirectoryFileComparator)

/*!
 @brief Singleton default comparator instance
 */
inline id<JavaUtilComparator> OrgApacheCommonsIoComparatorDirectoryFileComparator_get_DIRECTORY_COMPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheCommonsIoComparatorDirectoryFileComparator_DIRECTORY_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoComparatorDirectoryFileComparator, DIRECTORY_COMPARATOR, id<JavaUtilComparator>)

/*!
 @brief Singleton reverse default comparator instance
 */
inline id<JavaUtilComparator> OrgApacheCommonsIoComparatorDirectoryFileComparator_get_DIRECTORY_REVERSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheCommonsIoComparatorDirectoryFileComparator_DIRECTORY_REVERSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoComparatorDirectoryFileComparator, DIRECTORY_REVERSE, id<JavaUtilComparator>)

FOUNDATION_EXPORT void OrgApacheCommonsIoComparatorDirectoryFileComparator_init(OrgApacheCommonsIoComparatorDirectoryFileComparator *self);

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorDirectoryFileComparator *new_OrgApacheCommonsIoComparatorDirectoryFileComparator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorDirectoryFileComparator *create_OrgApacheCommonsIoComparatorDirectoryFileComparator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoComparatorDirectoryFileComparator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorDirectoryFileComparator")
