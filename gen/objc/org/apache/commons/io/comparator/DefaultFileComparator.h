//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/comparator/DefaultFileComparator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorDefaultFileComparator")
#ifdef RESTRICT_OrgApacheCommonsIoComparatorDefaultFileComparator
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorDefaultFileComparator 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoComparatorDefaultFileComparator 1
#endif
#undef RESTRICT_OrgApacheCommonsIoComparatorDefaultFileComparator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoComparatorDefaultFileComparator_) && (INCLUDE_ALL_OrgApacheCommonsIoComparatorDefaultFileComparator || defined(INCLUDE_OrgApacheCommonsIoComparatorDefaultFileComparator))
#define OrgApacheCommonsIoComparatorDefaultFileComparator_

#define RESTRICT_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#define INCLUDE_OrgApacheCommonsIoComparatorAbstractFileComparator 1
#include "org/apache/commons/io/comparator/AbstractFileComparator.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;
@protocol JavaUtilComparator;

/*!
 @brief Compare two files using the <b>default</b> <code>File.compareTo(File)</code> method.
 <p>
  This comparator can be used to sort lists or arrays of files
  by using the default file comparison. 
 <p>
  Example of sorting a list of files using the 
 <code>DEFAULT_COMPARATOR</code> singleton instance: 
 @code

        List&lt;File&gt; list = ...
        DefaultFileComparator.DEFAULT_COMPARATOR.sort(list); 
  
@endcode
  <p>
  Example of doing a <i>reverse</i> sort of an array of files using the 
 <code>DEFAULT_REVERSE</code> singleton instance: 
 @code

        File[] array = ...
        DefaultFileComparator.DEFAULT_REVERSE.sort(array); 
  
@endcode
  <p>
 @version $Id$
 @since 1.4
 */
@interface OrgApacheCommonsIoComparatorDefaultFileComparator : OrgApacheCommonsIoComparatorAbstractFileComparator < JavaIoSerializable >

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Compare the two files using the <code>File.compareTo(File)</code> method.
 @param file1 The first file to compare
 @param file2 The second file to compare
 @return the result of calling file1's 
 <code>File.compareTo(File)</code> with file2 as the parameter.
 */
- (jint)compareWithId:(JavaIoFile *)file1
               withId:(JavaIoFile *)file2;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoComparatorDefaultFileComparator)

/*!
 @brief Singleton default comparator instance
 */
inline id<JavaUtilComparator> OrgApacheCommonsIoComparatorDefaultFileComparator_get_DEFAULT_COMPARATOR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheCommonsIoComparatorDefaultFileComparator_DEFAULT_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoComparatorDefaultFileComparator, DEFAULT_COMPARATOR, id<JavaUtilComparator>)

/*!
 @brief Singleton reverse default comparator instance
 */
inline id<JavaUtilComparator> OrgApacheCommonsIoComparatorDefaultFileComparator_get_DEFAULT_REVERSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheCommonsIoComparatorDefaultFileComparator_DEFAULT_REVERSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoComparatorDefaultFileComparator, DEFAULT_REVERSE, id<JavaUtilComparator>)

FOUNDATION_EXPORT void OrgApacheCommonsIoComparatorDefaultFileComparator_init(OrgApacheCommonsIoComparatorDefaultFileComparator *self);

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorDefaultFileComparator *new_OrgApacheCommonsIoComparatorDefaultFileComparator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoComparatorDefaultFileComparator *create_OrgApacheCommonsIoComparatorDefaultFileComparator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoComparatorDefaultFileComparator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoComparatorDefaultFileComparator")
