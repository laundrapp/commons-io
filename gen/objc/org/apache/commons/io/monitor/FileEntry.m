//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/monitor/FileEntry.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/io/monitor/FileEntry.h"

@interface OrgApacheCommonsIoMonitorFileEntry () {
 @public
  OrgApacheCommonsIoMonitorFileEntry *parent_;
  IOSObjectArray *children_;
  JavaIoFile *file_;
  NSString *name_;
  jboolean exists_;
  jboolean directory_;
  jlong lastModified_;
  jlong length_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsIoMonitorFileEntry, parent_, OrgApacheCommonsIoMonitorFileEntry *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsIoMonitorFileEntry, children_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsIoMonitorFileEntry, file_, JavaIoFile *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsIoMonitorFileEntry, name_, NSString *)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsIoMonitorFileEntry)

IOSObjectArray *OrgApacheCommonsIoMonitorFileEntry_EMPTY_ENTRIES;

@implementation OrgApacheCommonsIoMonitorFileEntry

- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file {
  OrgApacheCommonsIoMonitorFileEntry_initWithJavaIoFile_(self, file);
  return self;
}

- (instancetype __nonnull)initWithOrgApacheCommonsIoMonitorFileEntry:(OrgApacheCommonsIoMonitorFileEntry *)parent
                                                      withJavaIoFile:(JavaIoFile *)file {
  OrgApacheCommonsIoMonitorFileEntry_initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_(self, parent, file);
  return self;
}

- (jboolean)refreshWithJavaIoFile:(JavaIoFile *)file {
  jboolean origExists = exists_;
  jlong origLastModified = lastModified_;
  jboolean origDirectory = directory_;
  jlong origLength = length_;
  JreStrongAssign(&name_, [((JavaIoFile *) nil_chk(file)) getName]);
  exists_ = [file exists];
  directory_ = exists_ ? [file isDirectory] : false;
  lastModified_ = exists_ ? [file lastModified] : 0;
  length_ = exists_ && !directory_ ? [file length] : 0;
  return exists_ != origExists || lastModified_ != origLastModified || directory_ != origDirectory || length_ != origLength;
}

- (OrgApacheCommonsIoMonitorFileEntry *)newChildInstanceWithJavaIoFile:(JavaIoFile *)file {
  return create_OrgApacheCommonsIoMonitorFileEntry_initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_(self, file);
}

- (OrgApacheCommonsIoMonitorFileEntry *)getParent {
  return parent_;
}

- (jint)getLevel {
  return parent_ == nil ? 0 : [parent_ getLevel] + 1;
}

- (IOSObjectArray *)getChildren {
  return children_ != nil ? children_ : OrgApacheCommonsIoMonitorFileEntry_EMPTY_ENTRIES;
}

- (void)setChildrenWithOrgApacheCommonsIoMonitorFileEntryArray:(IOSObjectArray *)children {
  JreStrongAssign(&self->children_, children);
}

- (JavaIoFile *)getFile {
  return file_;
}

- (NSString *)getName {
  return name_;
}

- (void)setNameWithNSString:(NSString *)name {
  JreStrongAssign(&self->name_, name);
}

- (jlong)getLastModified {
  return lastModified_;
}

- (void)setLastModifiedWithLong:(jlong)lastModified {
  self->lastModified_ = lastModified;
}

- (jlong)getLength {
  return length_;
}

- (void)setLengthWithLong:(jlong)length {
  self->length_ = length;
}

- (jboolean)isExists {
  return exists_;
}

- (void)setExistsWithBoolean:(jboolean)exists {
  self->exists_ = exists;
}

- (jboolean)isDirectory {
  return directory_;
}

- (void)setDirectoryWithBoolean:(jboolean)directory {
  self->directory_ = directory;
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(children_);
  RELEASE_(file_);
  RELEASE_(name_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsIoMonitorFileEntry class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsIoMonitorFileEntry_EMPTY_ENTRIES, [IOSObjectArray newArrayWithLength:0 type:OrgApacheCommonsIoMonitorFileEntry_class_()]);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsIoMonitorFileEntry)
  }
}

@end

void OrgApacheCommonsIoMonitorFileEntry_initWithJavaIoFile_(OrgApacheCommonsIoMonitorFileEntry *self, JavaIoFile *file) {
  OrgApacheCommonsIoMonitorFileEntry_initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_(self, nil, file);
}

OrgApacheCommonsIoMonitorFileEntry *new_OrgApacheCommonsIoMonitorFileEntry_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoMonitorFileEntry, initWithJavaIoFile_, file)
}

OrgApacheCommonsIoMonitorFileEntry *create_OrgApacheCommonsIoMonitorFileEntry_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoMonitorFileEntry, initWithJavaIoFile_, file)
}

void OrgApacheCommonsIoMonitorFileEntry_initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_(OrgApacheCommonsIoMonitorFileEntry *self, OrgApacheCommonsIoMonitorFileEntry *parent, JavaIoFile *file) {
  NSObject_init(self);
  if (file == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"File is missing");
  }
  JreStrongAssign(&self->file_, file);
  JreStrongAssign(&self->parent_, parent);
  JreStrongAssign(&self->name_, [file getName]);
}

OrgApacheCommonsIoMonitorFileEntry *new_OrgApacheCommonsIoMonitorFileEntry_initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_(OrgApacheCommonsIoMonitorFileEntry *parent, JavaIoFile *file) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoMonitorFileEntry, initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_, parent, file)
}

OrgApacheCommonsIoMonitorFileEntry *create_OrgApacheCommonsIoMonitorFileEntry_initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_(OrgApacheCommonsIoMonitorFileEntry *parent, JavaIoFile *file) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoMonitorFileEntry, initWithOrgApacheCommonsIoMonitorFileEntry_withJavaIoFile_, parent, file)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoMonitorFileEntry)
