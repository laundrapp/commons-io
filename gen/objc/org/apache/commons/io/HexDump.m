//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/HexDump.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "org/apache/commons/io/HexDump.h"

inline IOSCharArray *OrgApacheCommonsIoHexDump_get__hexcodes(void);
static IOSCharArray *OrgApacheCommonsIoHexDump__hexcodes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoHexDump, _hexcodes, IOSCharArray *)

inline IOSIntArray *OrgApacheCommonsIoHexDump_get__shifts(void);
static IOSIntArray *OrgApacheCommonsIoHexDump__shifts;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoHexDump, _shifts, IOSIntArray *)

__attribute__((unused)) static JavaLangStringBuilder *OrgApacheCommonsIoHexDump_dumpWithJavaLangStringBuilder_withLong_(JavaLangStringBuilder *_lbuffer, jlong value);

__attribute__((unused)) static JavaLangStringBuilder *OrgApacheCommonsIoHexDump_dumpWithJavaLangStringBuilder_withByte_(JavaLangStringBuilder *_cbuffer, jbyte value);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsIoHexDump)

NSString *OrgApacheCommonsIoHexDump_EOL;

@implementation OrgApacheCommonsIoHexDump

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsIoHexDump_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)dumpWithByteArray:(IOSByteArray *)data
                 withLong:(jlong)offset
   withJavaIoOutputStream:(JavaIoOutputStream *)stream
                  withInt:(jint)index {
  OrgApacheCommonsIoHexDump_dumpWithByteArray_withLong_withJavaIoOutputStream_withInt_(data, offset, stream, index);
}

+ (void)initialize {
  if (self == [OrgApacheCommonsIoHexDump class]) {
    JreStrongAssign(&OrgApacheCommonsIoHexDump_EOL, JavaLangSystem_getPropertyWithNSString_(@"line.separator"));
    JreStrongAssignAndConsume(&OrgApacheCommonsIoHexDump__hexcodes, [IOSCharArray newArrayWithChars:(jchar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16]);
    JreStrongAssignAndConsume(&OrgApacheCommonsIoHexDump__shifts, [IOSIntArray newArrayWithInts:(jint[]){ 28, 24, 20, 16, 12, 8, 4, 0 } count:8]);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsIoHexDump)
  }
}

@end

void OrgApacheCommonsIoHexDump_init(OrgApacheCommonsIoHexDump *self) {
  NSObject_init(self);
}

OrgApacheCommonsIoHexDump *new_OrgApacheCommonsIoHexDump_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoHexDump, init)
}

OrgApacheCommonsIoHexDump *create_OrgApacheCommonsIoHexDump_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoHexDump, init)
}

void OrgApacheCommonsIoHexDump_dumpWithByteArray_withLong_withJavaIoOutputStream_withInt_(IOSByteArray *data, jlong offset, JavaIoOutputStream *stream, jint index) {
  OrgApacheCommonsIoHexDump_initialize();
  if (index < 0 || index >= ((IOSByteArray *) nil_chk(data))->size_) {
    @throw create_JavaLangArrayIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"illegal index: ", index, @" into array of length ", ((IOSByteArray *) nil_chk(data))->size_));
  }
  if (stream == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot write to nullstream");
  }
  jlong display_offset = offset + index;
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_initWithInt_(74);
  for (jint j = index; j < ((IOSByteArray *) nil_chk(data))->size_; j += 16) {
    jint chars_read = data->size_ - j;
    if (chars_read > 16) {
      chars_read = 16;
    }
    [((JavaLangStringBuilder *) nil_chk(OrgApacheCommonsIoHexDump_dumpWithJavaLangStringBuilder_withLong_(buffer, display_offset))) appendWithChar:' '];
    for (jint k = 0; k < 16; k++) {
      if (k < chars_read) {
        OrgApacheCommonsIoHexDump_dumpWithJavaLangStringBuilder_withByte_(buffer, IOSByteArray_Get(data, k + j));
      }
      else {
        [buffer appendWithNSString:@"  "];
      }
      [buffer appendWithChar:' '];
    }
    for (jint k = 0; k < chars_read; k++) {
      if (IOSByteArray_Get(data, k + j) >= ' ' && IOSByteArray_Get(data, k + j) < 127) {
        [buffer appendWithChar:(jchar) IOSByteArray_Get(data, k + j)];
      }
      else {
        [buffer appendWithChar:'.'];
      }
    }
    [buffer appendWithNSString:OrgApacheCommonsIoHexDump_EOL];
    [stream writeWithByteArray:[((NSString *) nil_chk([buffer description])) java_getBytes]];
    [stream flush];
    [buffer setLengthWithInt:0];
    display_offset += chars_read;
  }
}

JavaLangStringBuilder *OrgApacheCommonsIoHexDump_dumpWithJavaLangStringBuilder_withLong_(JavaLangStringBuilder *_lbuffer, jlong value) {
  OrgApacheCommonsIoHexDump_initialize();
  for (jint j = 0; j < 8; j++) {
    [((JavaLangStringBuilder *) nil_chk(_lbuffer)) appendWithChar:IOSCharArray_Get(nil_chk(OrgApacheCommonsIoHexDump__hexcodes), (jint) (JreRShift64(value, IOSIntArray_Get(nil_chk(OrgApacheCommonsIoHexDump__shifts), j))) & 15)];
  }
  return _lbuffer;
}

JavaLangStringBuilder *OrgApacheCommonsIoHexDump_dumpWithJavaLangStringBuilder_withByte_(JavaLangStringBuilder *_cbuffer, jbyte value) {
  OrgApacheCommonsIoHexDump_initialize();
  for (jint j = 0; j < 2; j++) {
    [((JavaLangStringBuilder *) nil_chk(_cbuffer)) appendWithChar:IOSCharArray_Get(nil_chk(OrgApacheCommonsIoHexDump__hexcodes), (JreRShift32(value, IOSIntArray_Get(nil_chk(OrgApacheCommonsIoHexDump__shifts), j + 6))) & 15)];
  }
  return _cbuffer;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoHexDump)
