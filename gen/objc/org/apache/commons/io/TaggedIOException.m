//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/TaggedIOException.java
//

#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Serializable.h"
#include "java/lang/Throwable.h"
#include "org/apache/commons/io/IOExceptionWithCause.h"
#include "org/apache/commons/io/TaggedIOException.h"

@interface OrgApacheCommonsIoTaggedIOException () {
 @public
  /*!
   @brief The tag of this exception.
   */
  id<JavaIoSerializable> tag_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsIoTaggedIOException, tag_, id<JavaIoSerializable>)

/*!
 @brief Generated serial version UID.
 */
inline jlong OrgApacheCommonsIoTaggedIOException_get_serialVersionUID(void);
#define OrgApacheCommonsIoTaggedIOException_serialVersionUID -6994123481142850163LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsIoTaggedIOException, serialVersionUID, jlong)

@implementation OrgApacheCommonsIoTaggedIOException

+ (jboolean)isTaggedWithWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                       withId:(id)tag {
  return OrgApacheCommonsIoTaggedIOException_isTaggedWithWithJavaLangThrowable_withId_(throwable, tag);
}

+ (void)throwCauseIfTaggedWithWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                             withId:(id)tag {
  OrgApacheCommonsIoTaggedIOException_throwCauseIfTaggedWithWithJavaLangThrowable_withId_(throwable, tag);
}

- (instancetype)initWithJavaIoIOException:(JavaIoIOException *)original
                   withJavaIoSerializable:(id<JavaIoSerializable>)tag {
  OrgApacheCommonsIoTaggedIOException_initWithJavaIoIOException_withJavaIoSerializable_(self, original, tag);
  return self;
}

- (id<JavaIoSerializable>)getTag {
  return tag_;
}

- (JavaIoIOException *)getCause {
  return (JavaIoIOException *) cast_chk([super getCause], [JavaIoIOException class]);
}

- (void)dealloc {
  RELEASE_(tag_);
  [super dealloc];
}

@end

jboolean OrgApacheCommonsIoTaggedIOException_isTaggedWithWithJavaLangThrowable_withId_(JavaLangThrowable *throwable, id tag) {
  OrgApacheCommonsIoTaggedIOException_initialize();
  return tag != nil && [throwable isKindOfClass:[OrgApacheCommonsIoTaggedIOException class]] && [tag isEqual:((OrgApacheCommonsIoTaggedIOException *) nil_chk(((OrgApacheCommonsIoTaggedIOException *) cast_chk(throwable, [OrgApacheCommonsIoTaggedIOException class]))))->tag_];
}

void OrgApacheCommonsIoTaggedIOException_throwCauseIfTaggedWithWithJavaLangThrowable_withId_(JavaLangThrowable *throwable, id tag) {
  OrgApacheCommonsIoTaggedIOException_initialize();
  if (OrgApacheCommonsIoTaggedIOException_isTaggedWithWithJavaLangThrowable_withId_(throwable, tag)) {
    @throw nil_chk([((OrgApacheCommonsIoTaggedIOException *) nil_chk(((OrgApacheCommonsIoTaggedIOException *) cast_chk(throwable, [OrgApacheCommonsIoTaggedIOException class])))) getCause]);
  }
}

void OrgApacheCommonsIoTaggedIOException_initWithJavaIoIOException_withJavaIoSerializable_(OrgApacheCommonsIoTaggedIOException *self, JavaIoIOException *original, id<JavaIoSerializable> tag) {
  OrgApacheCommonsIoIOExceptionWithCause_initWithNSString_withJavaLangThrowable_(self, [((JavaIoIOException *) nil_chk(original)) getMessage], original);
  JreStrongAssign(&self->tag_, tag);
}

OrgApacheCommonsIoTaggedIOException *new_OrgApacheCommonsIoTaggedIOException_initWithJavaIoIOException_withJavaIoSerializable_(JavaIoIOException *original, id<JavaIoSerializable> tag) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoTaggedIOException, initWithJavaIoIOException_withJavaIoSerializable_, original, tag)
}

OrgApacheCommonsIoTaggedIOException *create_OrgApacheCommonsIoTaggedIOException_initWithJavaIoIOException_withJavaIoSerializable_(JavaIoIOException *original, id<JavaIoSerializable> tag) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoTaggedIOException, initWithJavaIoIOException_withJavaIoSerializable_, original, tag)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoTaggedIOException)
