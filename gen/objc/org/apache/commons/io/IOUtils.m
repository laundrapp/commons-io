//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/IOUtils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/BufferedReader.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/CharArrayWriter.h"
#include "java/io/Closeable.h"
#include "java/io/EOFException.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/PrintWriter.h"
#include "java/io/Reader.h"
#include "java/io/Writer.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/ServerSocket.h"
#include "java/net/Socket.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/nio/channels/Selector.h"
#include "java/nio/charset/Charset.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/apache/commons/io/Charsets.h"
#include "org/apache/commons/io/IOUtils.h"
#include "org/apache/commons/io/LineIterator.h"
#include "org/apache/commons/io/output/ByteArrayOutputStream.h"
#include "org/apache/commons/io/output/StringBuilderWriter.h"

inline jint OrgApacheCommonsIoIOUtils_get_EOF(void);
#define OrgApacheCommonsIoIOUtils_EOF -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsIoIOUtils, EOF, jint)

/*!
 @brief The default buffer size () to use for  
 <code>OutputStream)</code>
  and 
 <code>Writer)</code>
 */
inline jint OrgApacheCommonsIoIOUtils_get_DEFAULT_BUFFER_SIZE(void);
#define OrgApacheCommonsIoIOUtils_DEFAULT_BUFFER_SIZE 4096
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsIoIOUtils, DEFAULT_BUFFER_SIZE, jint)

/*!
 @brief The default buffer size to use for the skip() methods.
 */
inline jint OrgApacheCommonsIoIOUtils_get_SKIP_BUFFER_SIZE(void);
#define OrgApacheCommonsIoIOUtils_SKIP_BUFFER_SIZE 2048
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsIoIOUtils, SKIP_BUFFER_SIZE, jint)

inline IOSCharArray *OrgApacheCommonsIoIOUtils_get_SKIP_CHAR_BUFFER(void);
inline IOSCharArray *OrgApacheCommonsIoIOUtils_set_SKIP_CHAR_BUFFER(IOSCharArray *value);
static IOSCharArray *OrgApacheCommonsIoIOUtils_SKIP_CHAR_BUFFER;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheCommonsIoIOUtils, SKIP_CHAR_BUFFER, IOSCharArray *)

inline IOSByteArray *OrgApacheCommonsIoIOUtils_get_SKIP_BYTE_BUFFER(void);
inline IOSByteArray *OrgApacheCommonsIoIOUtils_set_SKIP_BYTE_BUFFER(IOSByteArray *value);
static IOSByteArray *OrgApacheCommonsIoIOUtils_SKIP_BYTE_BUFFER;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheCommonsIoIOUtils, SKIP_BYTE_BUFFER, IOSByteArray *)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsIoIOUtils)

jchar OrgApacheCommonsIoIOUtils_DIR_SEPARATOR;
NSString *OrgApacheCommonsIoIOUtils_LINE_SEPARATOR_UNIX = @"\n";
NSString *OrgApacheCommonsIoIOUtils_LINE_SEPARATOR_WINDOWS = @"\x0d\n";
NSString *OrgApacheCommonsIoIOUtils_LINE_SEPARATOR;

@implementation OrgApacheCommonsIoIOUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  OrgApacheCommonsIoIOUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)closeWithJavaNetURLConnection:(JavaNetURLConnection *)conn {
  OrgApacheCommonsIoIOUtils_closeWithJavaNetURLConnection_(conn);
}

+ (void)closeQuietlyWithJavaIoReader:(JavaIoReader *)input {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoReader_(input);
}

+ (void)closeQuietlyWithJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoWriter_(output);
}

+ (void)closeQuietlyWithJavaIoInputStream:(JavaIoInputStream *)input {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoInputStream_(input);
}

+ (void)closeQuietlyWithJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoOutputStream_(output);
}

+ (void)closeQuietlyWithJavaIoCloseable:(id<JavaIoCloseable>)closeable {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoCloseable_(closeable);
}

+ (void)closeQuietlyWithJavaNetSocket:(JavaNetSocket *)sock {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaNetSocket_(sock);
}

+ (void)closeQuietlyWithJavaNioChannelsSelector:(JavaNioChannelsSelector *)selector {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaNioChannelsSelector_(selector);
}

+ (void)closeQuietlyWithJavaNetServerSocket:(JavaNetServerSocket *)sock {
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaNetServerSocket_(sock);
}

+ (JavaIoInputStream *)toBufferedInputStreamWithJavaIoInputStream:(JavaIoInputStream *)input {
  return OrgApacheCommonsIoIOUtils_toBufferedInputStreamWithJavaIoInputStream_(input);
}

+ (JavaIoBufferedReader *)toBufferedReaderWithJavaIoReader:(JavaIoReader *)reader {
  return OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(reader);
}

+ (IOSByteArray *)toByteArrayWithJavaIoInputStream:(JavaIoInputStream *)input {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_(input);
}

+ (IOSByteArray *)toByteArrayWithJavaIoInputStream:(JavaIoInputStream *)input
                                          withLong:(jlong)size {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_withLong_(input, size);
}

+ (IOSByteArray *)toByteArrayWithJavaIoInputStream:(JavaIoInputStream *)input
                                           withInt:(jint)size {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_withInt_(input, size);
}

+ (IOSByteArray *)toByteArrayWithJavaIoReader:(JavaIoReader *)input {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_(input);
}

+ (IOSByteArray *)toByteArrayWithJavaIoReader:(JavaIoReader *)input
                    withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_withJavaNioCharsetCharset_(input, encoding);
}

+ (IOSByteArray *)toByteArrayWithJavaIoReader:(JavaIoReader *)input
                                 withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_withNSString_(input, encoding);
}

+ (IOSByteArray *)toByteArrayWithNSString:(NSString *)input {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithNSString_(input);
}

+ (IOSByteArray *)toByteArrayWithJavaNetURI:(JavaNetURI *)uri {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURI_(uri);
}

+ (IOSByteArray *)toByteArrayWithJavaNetURL:(JavaNetURL *)url {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURL_(url);
}

+ (IOSByteArray *)toByteArrayWithJavaNetURLConnection:(JavaNetURLConnection *)urlConn {
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURLConnection_(urlConn);
}

+ (IOSCharArray *)toCharArrayWithJavaIoInputStream:(JavaIoInputStream *)is {
  return OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_(is);
}

+ (IOSCharArray *)toCharArrayWithJavaIoInputStream:(JavaIoInputStream *)is
                         withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_withJavaNioCharsetCharset_(is, encoding);
}

+ (IOSCharArray *)toCharArrayWithJavaIoInputStream:(JavaIoInputStream *)is
                                      withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_withNSString_(is, encoding);
}

+ (IOSCharArray *)toCharArrayWithJavaIoReader:(JavaIoReader *)input {
  return OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoReader_(input);
}

+ (NSString *)toStringWithJavaIoInputStream:(JavaIoInputStream *)input {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_(input);
}

+ (NSString *)toStringWithJavaIoInputStream:(JavaIoInputStream *)input
                  withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withJavaNioCharsetCharset_(input, encoding);
}

+ (NSString *)toStringWithJavaIoInputStream:(JavaIoInputStream *)input
                               withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withNSString_(input, encoding);
}

+ (NSString *)toStringWithJavaIoReader:(JavaIoReader *)input {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaIoReader_(input);
}

+ (NSString *)toStringWithJavaNetURI:(JavaNetURI *)uri {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_(uri);
}

+ (NSString *)toStringWithJavaNetURI:(JavaNetURI *)uri
           withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_withJavaNioCharsetCharset_(uri, encoding);
}

+ (NSString *)toStringWithJavaNetURI:(JavaNetURI *)uri
                        withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_withNSString_(uri, encoding);
}

+ (NSString *)toStringWithJavaNetURL:(JavaNetURL *)url {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_(url);
}

+ (NSString *)toStringWithJavaNetURL:(JavaNetURL *)url
           withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withJavaNioCharsetCharset_(url, encoding);
}

+ (NSString *)toStringWithJavaNetURL:(JavaNetURL *)url
                        withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withNSString_(url, encoding);
}

+ (NSString *)toStringWithByteArray:(IOSByteArray *)input {
  return OrgApacheCommonsIoIOUtils_toStringWithByteArray_(input);
}

+ (NSString *)toStringWithByteArray:(IOSByteArray *)input
                       withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toStringWithByteArray_withNSString_(input, encoding);
}

+ (id<JavaUtilList>)readLinesWithJavaIoInputStream:(JavaIoInputStream *)input {
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_(input);
}

+ (id<JavaUtilList>)readLinesWithJavaIoInputStream:(JavaIoInputStream *)input
                         withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_withJavaNioCharsetCharset_(input, encoding);
}

+ (id<JavaUtilList>)readLinesWithJavaIoInputStream:(JavaIoInputStream *)input
                                      withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_withNSString_(input, encoding);
}

+ (id<JavaUtilList>)readLinesWithJavaIoReader:(JavaIoReader *)input {
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoReader_(input);
}

+ (OrgApacheCommonsIoLineIterator *)lineIteratorWithJavaIoReader:(JavaIoReader *)reader {
  return OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoReader_(reader);
}

+ (OrgApacheCommonsIoLineIterator *)lineIteratorWithJavaIoInputStream:(JavaIoInputStream *)input
                                            withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoInputStream_withJavaNioCharsetCharset_(input, encoding);
}

+ (OrgApacheCommonsIoLineIterator *)lineIteratorWithJavaIoInputStream:(JavaIoInputStream *)input
                                                         withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoInputStream_withNSString_(input, encoding);
}

+ (JavaIoInputStream *)toInputStreamWithJavaLangCharSequence:(id<JavaLangCharSequence>)input {
  return OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_(input);
}

+ (JavaIoInputStream *)toInputStreamWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                   withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_withJavaNioCharsetCharset_(input, encoding);
}

+ (JavaIoInputStream *)toInputStreamWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                                withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_withNSString_(input, encoding);
}

+ (JavaIoInputStream *)toInputStreamWithNSString:(NSString *)input {
  return OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_(input);
}

+ (JavaIoInputStream *)toInputStreamWithNSString:(NSString *)input
                       withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  return OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_withJavaNioCharsetCharset_(input, encoding);
}

+ (JavaIoInputStream *)toInputStreamWithNSString:(NSString *)input
                                    withNSString:(NSString *)encoding {
  return OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_withNSString_(input, encoding);
}

+ (void)writeWithByteArray:(IOSByteArray *)data
    withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoOutputStream_(data, output);
}

+ (void)writeWithByteArray:(IOSByteArray *)data
          withJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_(data, output);
}

+ (void)writeWithByteArray:(IOSByteArray *)data
          withJavaIoWriter:(JavaIoWriter *)output
 withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_withJavaNioCharsetCharset_(data, output, encoding);
}

+ (void)writeWithByteArray:(IOSByteArray *)data
          withJavaIoWriter:(JavaIoWriter *)output
              withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_withNSString_(data, output, encoding);
}

+ (void)writeWithCharArray:(IOSCharArray *)data
          withJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoWriter_(data, output);
}

+ (void)writeWithCharArray:(IOSCharArray *)data
    withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_(data, output);
}

+ (void)writeWithCharArray:(IOSCharArray *)data
    withJavaIoOutputStream:(JavaIoOutputStream *)output
 withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, encoding);
}

+ (void)writeWithCharArray:(IOSCharArray *)data
    withJavaIoOutputStream:(JavaIoOutputStream *)output
              withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_withNSString_(data, output, encoding);
}

+ (void)writeWithJavaLangCharSequence:(id<JavaLangCharSequence>)data
                     withJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoWriter_(data, output);
}

+ (void)writeWithJavaLangCharSequence:(id<JavaLangCharSequence>)data
               withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_(data, output);
}

+ (void)writeWithJavaLangCharSequence:(id<JavaLangCharSequence>)data
               withJavaIoOutputStream:(JavaIoOutputStream *)output
            withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, encoding);
}

+ (void)writeWithJavaLangCharSequence:(id<JavaLangCharSequence>)data
               withJavaIoOutputStream:(JavaIoOutputStream *)output
                         withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_withNSString_(data, output, encoding);
}

+ (void)writeWithNSString:(NSString *)data
         withJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoWriter_(data, output);
}

+ (void)writeWithNSString:(NSString *)data
   withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_(data, output);
}

+ (void)writeWithNSString:(NSString *)data
   withJavaIoOutputStream:(JavaIoOutputStream *)output
withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, encoding);
}

+ (void)writeWithNSString:(NSString *)data
   withJavaIoOutputStream:(JavaIoOutputStream *)output
             withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withNSString_(data, output, encoding);
}

+ (void)writeWithJavaLangStringBuffer:(JavaLangStringBuffer *)data
                     withJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoWriter_(data, output);
}

+ (void)writeWithJavaLangStringBuffer:(JavaLangStringBuffer *)data
               withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoOutputStream_(data, output);
}

+ (void)writeWithJavaLangStringBuffer:(JavaLangStringBuffer *)data
               withJavaIoOutputStream:(JavaIoOutputStream *)output
                         withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoOutputStream_withNSString_(data, output, encoding);
}

+ (void)writeLinesWithJavaUtilCollection:(id<JavaUtilCollection>)lines
                            withNSString:(NSString *)lineEnding
                  withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_(lines, lineEnding, output);
}

+ (void)writeLinesWithJavaUtilCollection:(id<JavaUtilCollection>)lines
                            withNSString:(NSString *)lineEnding
                  withJavaIoOutputStream:(JavaIoOutputStream *)output
               withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(lines, lineEnding, output, encoding);
}

+ (void)writeLinesWithJavaUtilCollection:(id<JavaUtilCollection>)lines
                            withNSString:(NSString *)lineEnding
                  withJavaIoOutputStream:(JavaIoOutputStream *)output
                            withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_withNSString_(lines, lineEnding, output, encoding);
}

+ (void)writeLinesWithJavaUtilCollection:(id<JavaUtilCollection>)lines
                            withNSString:(NSString *)lineEnding
                        withJavaIoWriter:(JavaIoWriter *)writer {
  OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoWriter_(lines, lineEnding, writer);
}

+ (jint)copy__WithJavaIoInputStream:(JavaIoInputStream *)input
             withJavaIoOutputStream:(JavaIoOutputStream *)output {
  return OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoOutputStream_(input, output);
}

+ (jlong)copyLargeWithJavaIoInputStream:(JavaIoInputStream *)input
                 withJavaIoOutputStream:(JavaIoOutputStream *)output {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_(input, output);
}

+ (jlong)copyLargeWithJavaIoInputStream:(JavaIoInputStream *)input
                 withJavaIoOutputStream:(JavaIoOutputStream *)output
                          withByteArray:(IOSByteArray *)buffer {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withByteArray_(input, output, buffer);
}

+ (jlong)copyLargeWithJavaIoInputStream:(JavaIoInputStream *)input
                 withJavaIoOutputStream:(JavaIoOutputStream *)output
                               withLong:(jlong)inputOffset
                               withLong:(jlong)length {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withLong_withLong_(input, output, inputOffset, length);
}

+ (jlong)copyLargeWithJavaIoInputStream:(JavaIoInputStream *)input
                 withJavaIoOutputStream:(JavaIoOutputStream *)output
                               withLong:(jlong)inputOffset
                               withLong:(jlong)length
                          withByteArray:(IOSByteArray *)buffer {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withLong_withLong_withByteArray_(input, output, inputOffset, length, buffer);
}

+ (void)copy__WithJavaIoInputStream:(JavaIoInputStream *)input
                   withJavaIoWriter:(JavaIoWriter *)output {
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_(input, output);
}

+ (void)copy__WithJavaIoInputStream:(JavaIoInputStream *)input
                   withJavaIoWriter:(JavaIoWriter *)output
          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withJavaNioCharsetCharset_(input, output, encoding);
}

+ (void)copy__WithJavaIoInputStream:(JavaIoInputStream *)input
                   withJavaIoWriter:(JavaIoWriter *)output
                       withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withNSString_(input, output, encoding);
}

+ (jint)copy__WithJavaIoReader:(JavaIoReader *)input
              withJavaIoWriter:(JavaIoWriter *)output {
  return OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(input, output);
}

+ (jlong)copyLargeWithJavaIoReader:(JavaIoReader *)input
                  withJavaIoWriter:(JavaIoWriter *)output {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_(input, output);
}

+ (jlong)copyLargeWithJavaIoReader:(JavaIoReader *)input
                  withJavaIoWriter:(JavaIoWriter *)output
                     withCharArray:(IOSCharArray *)buffer {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withCharArray_(input, output, buffer);
}

+ (jlong)copyLargeWithJavaIoReader:(JavaIoReader *)input
                  withJavaIoWriter:(JavaIoWriter *)output
                          withLong:(jlong)inputOffset
                          withLong:(jlong)length {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withLong_withLong_(input, output, inputOffset, length);
}

+ (jlong)copyLargeWithJavaIoReader:(JavaIoReader *)input
                  withJavaIoWriter:(JavaIoWriter *)output
                          withLong:(jlong)inputOffset
                          withLong:(jlong)length
                     withCharArray:(IOSCharArray *)buffer {
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withLong_withLong_withCharArray_(input, output, inputOffset, length, buffer);
}

+ (void)copy__WithJavaIoReader:(JavaIoReader *)input
        withJavaIoOutputStream:(JavaIoOutputStream *)output {
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_(input, output);
}

+ (void)copy__WithJavaIoReader:(JavaIoReader *)input
        withJavaIoOutputStream:(JavaIoOutputStream *)output
     withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withJavaNioCharsetCharset_(input, output, encoding);
}

+ (void)copy__WithJavaIoReader:(JavaIoReader *)input
        withJavaIoOutputStream:(JavaIoOutputStream *)output
                  withNSString:(NSString *)encoding {
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withNSString_(input, output, encoding);
}

+ (jboolean)contentEqualsWithJavaIoInputStream:(JavaIoInputStream *)input1
                         withJavaIoInputStream:(JavaIoInputStream *)input2 {
  return OrgApacheCommonsIoIOUtils_contentEqualsWithJavaIoInputStream_withJavaIoInputStream_(input1, input2);
}

+ (jboolean)contentEqualsWithJavaIoReader:(JavaIoReader *)input1
                         withJavaIoReader:(JavaIoReader *)input2 {
  return OrgApacheCommonsIoIOUtils_contentEqualsWithJavaIoReader_withJavaIoReader_(input1, input2);
}

+ (jboolean)contentEqualsIgnoreEOLWithJavaIoReader:(JavaIoReader *)input1
                                  withJavaIoReader:(JavaIoReader *)input2 {
  return OrgApacheCommonsIoIOUtils_contentEqualsIgnoreEOLWithJavaIoReader_withJavaIoReader_(input1, input2);
}

+ (jlong)skipWithJavaIoInputStream:(JavaIoInputStream *)input
                          withLong:(jlong)toSkip {
  return OrgApacheCommonsIoIOUtils_skipWithJavaIoInputStream_withLong_(input, toSkip);
}

+ (jlong)skipWithJavaIoReader:(JavaIoReader *)input
                     withLong:(jlong)toSkip {
  return OrgApacheCommonsIoIOUtils_skipWithJavaIoReader_withLong_(input, toSkip);
}

+ (void)skipFullyWithJavaIoInputStream:(JavaIoInputStream *)input
                              withLong:(jlong)toSkip {
  OrgApacheCommonsIoIOUtils_skipFullyWithJavaIoInputStream_withLong_(input, toSkip);
}

+ (void)skipFullyWithJavaIoReader:(JavaIoReader *)input
                         withLong:(jlong)toSkip {
  OrgApacheCommonsIoIOUtils_skipFullyWithJavaIoReader_withLong_(input, toSkip);
}

+ (jint)readWithJavaIoReader:(JavaIoReader *)input
               withCharArray:(IOSCharArray *)buffer
                     withInt:(jint)offset
                     withInt:(jint)length {
  return OrgApacheCommonsIoIOUtils_readWithJavaIoReader_withCharArray_withInt_withInt_(input, buffer, offset, length);
}

+ (jint)readWithJavaIoReader:(JavaIoReader *)input
               withCharArray:(IOSCharArray *)buffer {
  return OrgApacheCommonsIoIOUtils_readWithJavaIoReader_withCharArray_(input, buffer);
}

+ (jint)readWithJavaIoInputStream:(JavaIoInputStream *)input
                    withByteArray:(IOSByteArray *)buffer
                          withInt:(jint)offset
                          withInt:(jint)length {
  return OrgApacheCommonsIoIOUtils_readWithJavaIoInputStream_withByteArray_withInt_withInt_(input, buffer, offset, length);
}

+ (jint)readWithJavaIoInputStream:(JavaIoInputStream *)input
                    withByteArray:(IOSByteArray *)buffer {
  return OrgApacheCommonsIoIOUtils_readWithJavaIoInputStream_withByteArray_(input, buffer);
}

+ (void)readFullyWithJavaIoReader:(JavaIoReader *)input
                    withCharArray:(IOSCharArray *)buffer
                          withInt:(jint)offset
                          withInt:(jint)length {
  OrgApacheCommonsIoIOUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(input, buffer, offset, length);
}

+ (void)readFullyWithJavaIoReader:(JavaIoReader *)input
                    withCharArray:(IOSCharArray *)buffer {
  OrgApacheCommonsIoIOUtils_readFullyWithJavaIoReader_withCharArray_(input, buffer);
}

+ (void)readFullyWithJavaIoInputStream:(JavaIoInputStream *)input
                         withByteArray:(IOSByteArray *)buffer
                               withInt:(jint)offset
                               withInt:(jint)length {
  OrgApacheCommonsIoIOUtils_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(input, buffer, offset, length);
}

+ (void)readFullyWithJavaIoInputStream:(JavaIoInputStream *)input
                         withByteArray:(IOSByteArray *)buffer {
  OrgApacheCommonsIoIOUtils_readFullyWithJavaIoInputStream_withByteArray_(input, buffer);
}

+ (void)initialize {
  if (self == [OrgApacheCommonsIoIOUtils class]) {
    OrgApacheCommonsIoIOUtils_DIR_SEPARATOR = JreLoadStatic(JavaIoFile, separatorChar);
    {
      OrgApacheCommonsIoOutputStringBuilderWriter *buf = create_OrgApacheCommonsIoOutputStringBuilderWriter_initWithInt_(4);
      JavaIoPrintWriter *out = create_JavaIoPrintWriter_initWithJavaIoWriter_(buf);
      [out println];
      JreStrongAssign(&OrgApacheCommonsIoIOUtils_LINE_SEPARATOR, [buf description]);
      [out close];
    }
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsIoIOUtils)
  }
}

@end

void OrgApacheCommonsIoIOUtils_init(OrgApacheCommonsIoIOUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsIoIOUtils *new_OrgApacheCommonsIoIOUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoIOUtils, init)
}

OrgApacheCommonsIoIOUtils *create_OrgApacheCommonsIoIOUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoIOUtils, init)
}

void OrgApacheCommonsIoIOUtils_closeWithJavaNetURLConnection_(JavaNetURLConnection *conn) {
  OrgApacheCommonsIoIOUtils_initialize();
  if ([conn isKindOfClass:[JavaNetHttpURLConnection class]]) {
    [((JavaNetHttpURLConnection *) nil_chk(((JavaNetHttpURLConnection *) cast_chk(conn, [JavaNetHttpURLConnection class])))) disconnect];
  }
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoReader_(JavaIoReader *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoCloseable_(input);
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoWriter_(JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoCloseable_(output);
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoCloseable_(input);
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoOutputStream_(JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoCloseable_(output);
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoCloseable_(id<JavaIoCloseable> closeable) {
  OrgApacheCommonsIoIOUtils_initialize();
  @try {
    if (closeable != nil) {
      [closeable close];
    }
  }
  @catch (JavaIoIOException *ioe) {
  }
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaNetSocket_(JavaNetSocket *sock) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (sock != nil) {
    @try {
      [sock close];
    }
    @catch (JavaIoIOException *ioe) {
    }
  }
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaNioChannelsSelector_(JavaNioChannelsSelector *selector) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (selector != nil) {
    @try {
      [selector close];
    }
    @catch (JavaIoIOException *ioe) {
    }
  }
}

void OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaNetServerSocket_(JavaNetServerSocket *sock) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (sock != nil) {
    @try {
      [sock close];
    }
    @catch (JavaIoIOException *ioe) {
    }
  }
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toBufferedInputStreamWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoOutputByteArrayOutputStream_toBufferedInputStreamWithJavaIoInputStream_(input);
}

JavaIoBufferedReader *OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(JavaIoReader *reader) {
  OrgApacheCommonsIoIOUtils_initialize();
  return [reader isKindOfClass:[JavaIoBufferedReader class]] ? (JavaIoBufferedReader *) cast_chk(reader, [JavaIoBufferedReader class]) : create_JavaIoBufferedReader_initWithJavaIoReader_(reader);
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoOutputByteArrayOutputStream *output = create_OrgApacheCommonsIoOutputByteArrayOutputStream_init();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoOutputStream_(input, output);
  return [output toByteArray];
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_withLong_(JavaIoInputStream *input, jlong size) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (size > JavaLangInteger_MAX_VALUE) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"Size cannot be greater than Integer max value: ", size));
  }
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_withInt_(input, (jint) size);
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_withInt_(JavaIoInputStream *input, jint size) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (size < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Size must be equal or greater than zero: ", size));
  }
  if (size == 0) {
    return [IOSByteArray arrayWithLength:0];
  }
  IOSByteArray *data = [IOSByteArray arrayWithLength:size];
  jint offset = 0;
  jint readed;
  while (offset < size && (readed = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:data withInt:offset withInt:size - offset]) != OrgApacheCommonsIoIOUtils_EOF) {
    offset += readed;
  }
  if (offset != size) {
    @throw create_JavaIoIOException_initWithNSString_(JreStrcat("$I$I", @"Unexpected readed size. current: ", offset, @", excepted: ", size));
  }
  return data;
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_(JavaIoReader *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_withJavaNioCharsetCharset_(input, JavaNioCharsetCharset_defaultCharset());
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_withJavaNioCharsetCharset_(JavaIoReader *input, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoOutputByteArrayOutputStream *output = create_OrgApacheCommonsIoOutputByteArrayOutputStream_init();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withJavaNioCharsetCharset_(input, output, encoding);
  return [output toByteArray];
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_withNSString_(JavaIoReader *input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoReader_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithNSString_(NSString *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return [((NSString *) nil_chk(input)) java_getBytes];
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURI_(JavaNetURI *uri) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURL_([((JavaNetURI *) nil_chk(uri)) toURL]);
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURL_(JavaNetURL *url) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaNetURLConnection *conn = [((JavaNetURL *) nil_chk(url)) openConnection];
  @try {
    return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURLConnection_(conn);
  }
  @finally {
    OrgApacheCommonsIoIOUtils_closeWithJavaNetURLConnection_(conn);
  }
}

IOSByteArray *OrgApacheCommonsIoIOUtils_toByteArrayWithJavaNetURLConnection_(JavaNetURLConnection *urlConn) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoInputStream *inputStream = [((JavaNetURLConnection *) nil_chk(urlConn)) getInputStream];
  @try {
    return OrgApacheCommonsIoIOUtils_toByteArrayWithJavaIoInputStream_(inputStream);
  }
  @finally {
    [((JavaIoInputStream *) nil_chk(inputStream)) close];
  }
}

IOSCharArray *OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_(JavaIoInputStream *is) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_withJavaNioCharsetCharset_(is, JavaNioCharsetCharset_defaultCharset());
}

IOSCharArray *OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_withJavaNioCharsetCharset_(JavaIoInputStream *is, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoCharArrayWriter *output = create_JavaIoCharArrayWriter_init();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withJavaNioCharsetCharset_(is, output, encoding);
  return [output toCharArray];
}

IOSCharArray *OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_withNSString_(JavaIoInputStream *is, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoInputStream_withJavaNioCharsetCharset_(is, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

IOSCharArray *OrgApacheCommonsIoIOUtils_toCharArrayWithJavaIoReader_(JavaIoReader *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoCharArrayWriter *sw = create_JavaIoCharArrayWriter_init();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(input, sw);
  return [sw toCharArray];
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withJavaNioCharsetCharset_(input, JavaNioCharsetCharset_defaultCharset());
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withJavaNioCharsetCharset_(JavaIoInputStream *input, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoOutputStringBuilderWriter *sw = create_OrgApacheCommonsIoOutputStringBuilderWriter_init();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withJavaNioCharsetCharset_(input, sw, encoding);
  return [sw description];
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withNSString_(JavaIoInputStream *input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaIoReader_(JavaIoReader *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoOutputStringBuilderWriter *sw = create_OrgApacheCommonsIoOutputStringBuilderWriter_init();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(input, sw);
  return [sw description];
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_(JavaNetURI *uri) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_withJavaNioCharsetCharset_(uri, JavaNioCharsetCharset_defaultCharset());
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_withJavaNioCharsetCharset_(JavaNetURI *uri, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withJavaNioCharsetCharset_([((JavaNetURI *) nil_chk(uri)) toURL], OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding));
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_withNSString_(JavaNetURI *uri, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURI_withJavaNioCharsetCharset_(uri, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_(JavaNetURL *url) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withJavaNioCharsetCharset_(url, JavaNioCharsetCharset_defaultCharset());
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withJavaNioCharsetCharset_(JavaNetURL *url, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoInputStream *inputStream = [((JavaNetURL *) nil_chk(url)) openStream];
  @try {
    return OrgApacheCommonsIoIOUtils_toStringWithJavaIoInputStream_withJavaNioCharsetCharset_(inputStream, encoding);
  }
  @finally {
    [((JavaIoInputStream *) nil_chk(inputStream)) close];
  }
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withNSString_(JavaNetURL *url, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toStringWithJavaNetURL_withJavaNioCharsetCharset_(url, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithByteArray_(IOSByteArray *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return [NSString java_stringWithBytes:input];
}

NSString *OrgApacheCommonsIoIOUtils_toStringWithByteArray_withNSString_(IOSByteArray *input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return [NSString java_stringWithBytes:input charset:OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding)];
}

id<JavaUtilList> OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_(JavaIoInputStream *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_withJavaNioCharsetCharset_(input, JavaNioCharsetCharset_defaultCharset());
}

id<JavaUtilList> OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_withJavaNioCharsetCharset_(JavaIoInputStream *input, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoInputStreamReader *reader = create_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding));
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoReader_(reader);
}

id<JavaUtilList> OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_withNSString_(JavaIoInputStream *input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_readLinesWithJavaIoInputStream_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

id<JavaUtilList> OrgApacheCommonsIoIOUtils_readLinesWithJavaIoReader_(JavaIoReader *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoBufferedReader *reader = OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(input);
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  NSString *line = [((JavaIoBufferedReader *) nil_chk(reader)) readLine];
  while (line != nil) {
    [list addWithId:line];
    line = [reader readLine];
  }
  return list;
}

OrgApacheCommonsIoLineIterator *OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoReader_(JavaIoReader *reader) {
  OrgApacheCommonsIoIOUtils_initialize();
  return create_OrgApacheCommonsIoLineIterator_initWithJavaIoReader_(reader);
}

OrgApacheCommonsIoLineIterator *OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoInputStream_withJavaNioCharsetCharset_(JavaIoInputStream *input, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return create_OrgApacheCommonsIoLineIterator_initWithJavaIoReader_(create_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding)));
}

OrgApacheCommonsIoLineIterator *OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoInputStream_withNSString_(JavaIoInputStream *input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_lineIteratorWithJavaIoInputStream_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_(id<JavaLangCharSequence> input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_withJavaNioCharsetCharset_(input, JavaNioCharsetCharset_defaultCharset());
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_withJavaNioCharsetCharset_(id<JavaLangCharSequence> input, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_withJavaNioCharsetCharset_([((id<JavaLangCharSequence>) nil_chk(input)) description], encoding);
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_withNSString_(id<JavaLangCharSequence> input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toInputStreamWithJavaLangCharSequence_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_(NSString *input) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_withJavaNioCharsetCharset_(input, JavaNioCharsetCharset_defaultCharset());
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_withJavaNioCharsetCharset_(NSString *input, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  return create_JavaIoByteArrayInputStream_initWithByteArray_([((NSString *) nil_chk(input)) java_getBytesWithCharset:OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding)]);
}

JavaIoInputStream *OrgApacheCommonsIoIOUtils_toInputStreamWithNSString_withNSString_(NSString *input, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  IOSByteArray *bytes = [((NSString *) nil_chk(input)) java_getBytesWithCharset:OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding)];
  return create_JavaIoByteArrayInputStream_initWithByteArray_(bytes);
}

void OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoOutputStream_(IOSByteArray *data, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:data];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_(IOSByteArray *data, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_withJavaNioCharsetCharset_(data, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_withJavaNioCharsetCharset_(IOSByteArray *data, JavaIoWriter *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoWriter *) nil_chk(output)) writeWithNSString:[NSString java_stringWithBytes:data charset:OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding)]];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_withNSString_(IOSByteArray *data, JavaIoWriter *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithByteArray_withJavaIoWriter_withJavaNioCharsetCharset_(data, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

void OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoWriter_(IOSCharArray *data, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoWriter *) nil_chk(output)) writeWithCharArray:data];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_(IOSCharArray *data, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_withJavaNioCharsetCharset_(IOSCharArray *data, JavaIoOutputStream *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:[[NSString java_stringWithCharacters:data] java_getBytesWithCharset:OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding)]];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_withNSString_(IOSCharArray *data, JavaIoOutputStream *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithCharArray_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoWriter_(id<JavaLangCharSequence> data, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoWriter_([data description], output);
  }
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_(id<JavaLangCharSequence> data, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_withJavaNioCharsetCharset_(id<JavaLangCharSequence> data, JavaIoOutputStream *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_([data description], output, encoding);
  }
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_withNSString_(id<JavaLangCharSequence> data, JavaIoOutputStream *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithJavaLangCharSequence_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

void OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoWriter_(NSString *data, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoWriter *) nil_chk(output)) writeWithNSString:data];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_(NSString *data, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(NSString *data, JavaIoOutputStream *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:[data java_getBytesWithCharset:OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding)]];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withNSString_(NSString *data, JavaIoOutputStream *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(data, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoWriter_(JavaLangStringBuffer *data, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoWriter *) nil_chk(output)) writeWithNSString:[data description]];
  }
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoOutputStream_(JavaLangStringBuffer *data, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoOutputStream_withNSString_(data, output, nil);
}

void OrgApacheCommonsIoIOUtils_writeWithJavaLangStringBuffer_withJavaIoOutputStream_withNSString_(JavaLangStringBuffer *data, JavaIoOutputStream *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (data != nil) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:[((NSString *) nil_chk([data description])) java_getBytesWithCharset:OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding)]];
  }
}

void OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_(id<JavaUtilCollection> lines, NSString *lineEnding, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(lines, lineEnding, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(id<JavaUtilCollection> lines, NSString *lineEnding, JavaIoOutputStream *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (lines == nil) {
    return;
  }
  if (lineEnding == nil) {
    lineEnding = OrgApacheCommonsIoIOUtils_LINE_SEPARATOR;
  }
  JavaNioCharsetCharset *cs = OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding);
  for (id __strong line in lines) {
    if (line != nil) {
      [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:[((NSString *) nil_chk([line description])) java_getBytesWithCharset:cs]];
    }
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:[((NSString *) nil_chk(lineEnding)) java_getBytesWithCharset:cs]];
  }
}

void OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_withNSString_(id<JavaUtilCollection> lines, NSString *lineEnding, JavaIoOutputStream *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoOutputStream_withJavaNioCharsetCharset_(lines, lineEnding, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

void OrgApacheCommonsIoIOUtils_writeLinesWithJavaUtilCollection_withNSString_withJavaIoWriter_(id<JavaUtilCollection> lines, NSString *lineEnding, JavaIoWriter *writer) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (lines == nil) {
    return;
  }
  if (lineEnding == nil) {
    lineEnding = OrgApacheCommonsIoIOUtils_LINE_SEPARATOR;
  }
  for (id __strong line in lines) {
    if (line != nil) {
      [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:[line description]];
    }
    [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:lineEnding];
  }
}

jint OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *input, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  jlong count = OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_(input, output);
  if (count > JavaLangInteger_MAX_VALUE) {
    return -1;
  }
  return (jint) count;
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *input, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withByteArray_(input, output, [IOSByteArray arrayWithLength:OrgApacheCommonsIoIOUtils_DEFAULT_BUFFER_SIZE]);
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withByteArray_(JavaIoInputStream *input, JavaIoOutputStream *output, IOSByteArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  jlong count = 0;
  jint n = 0;
  while (OrgApacheCommonsIoIOUtils_EOF != (n = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:buffer])) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:buffer withInt:0 withInt:n];
    count += n;
  }
  return count;
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withLong_withLong_(JavaIoInputStream *input, JavaIoOutputStream *output, jlong inputOffset, jlong length) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withLong_withLong_withByteArray_(input, output, inputOffset, length, [IOSByteArray arrayWithLength:OrgApacheCommonsIoIOUtils_DEFAULT_BUFFER_SIZE]);
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoInputStream_withJavaIoOutputStream_withLong_withLong_withByteArray_(JavaIoInputStream *input, JavaIoOutputStream *output, jlong inputOffset, jlong length, IOSByteArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (inputOffset > 0) {
    OrgApacheCommonsIoIOUtils_skipFullyWithJavaIoInputStream_withLong_(input, inputOffset);
  }
  if (length == 0) {
    return 0;
  }
  jint bufferLength = ((IOSByteArray *) nil_chk(buffer))->size_;
  jint bytesToRead = bufferLength;
  if (length > 0 && length < bufferLength) {
    bytesToRead = (jint) length;
  }
  jint read;
  jlong totalRead = 0;
  while (bytesToRead > 0 && OrgApacheCommonsIoIOUtils_EOF != (read = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:buffer withInt:0 withInt:bytesToRead])) {
    [((JavaIoOutputStream *) nil_chk(output)) writeWithByteArray:buffer withInt:0 withInt:read];
    totalRead += read;
    if (length > 0) {
      bytesToRead = (jint) JavaLangMath_minWithLong_withLong_(length - totalRead, bufferLength);
    }
  }
  return totalRead;
}

void OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_(JavaIoInputStream *input, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withJavaNioCharsetCharset_(input, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withJavaNioCharsetCharset_(JavaIoInputStream *input, JavaIoWriter *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoInputStreamReader *in = create_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(input, OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding));
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(in, output);
}

void OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withNSString_(JavaIoInputStream *input, JavaIoWriter *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoInputStream_withJavaIoWriter_withJavaNioCharsetCharset_(input, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

jint OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(JavaIoReader *input, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  jlong count = OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_(input, output);
  if (count > JavaLangInteger_MAX_VALUE) {
    return -1;
  }
  return (jint) count;
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_(JavaIoReader *input, JavaIoWriter *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withCharArray_(input, output, [IOSCharArray arrayWithLength:OrgApacheCommonsIoIOUtils_DEFAULT_BUFFER_SIZE]);
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withCharArray_(JavaIoReader *input, JavaIoWriter *output, IOSCharArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  jlong count = 0;
  jint n = 0;
  while (OrgApacheCommonsIoIOUtils_EOF != (n = [((JavaIoReader *) nil_chk(input)) readWithCharArray:buffer])) {
    [((JavaIoWriter *) nil_chk(output)) writeWithCharArray:buffer withInt:0 withInt:n];
    count += n;
  }
  return count;
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withLong_withLong_(JavaIoReader *input, JavaIoWriter *output, jlong inputOffset, jlong length) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withLong_withLong_withCharArray_(input, output, inputOffset, length, [IOSCharArray arrayWithLength:OrgApacheCommonsIoIOUtils_DEFAULT_BUFFER_SIZE]);
}

jlong OrgApacheCommonsIoIOUtils_copyLargeWithJavaIoReader_withJavaIoWriter_withLong_withLong_withCharArray_(JavaIoReader *input, JavaIoWriter *output, jlong inputOffset, jlong length, IOSCharArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (inputOffset > 0) {
    OrgApacheCommonsIoIOUtils_skipFullyWithJavaIoReader_withLong_(input, inputOffset);
  }
  if (length == 0) {
    return 0;
  }
  jint bytesToRead = ((IOSCharArray *) nil_chk(buffer))->size_;
  if (length > 0 && length < buffer->size_) {
    bytesToRead = (jint) length;
  }
  jint read;
  jlong totalRead = 0;
  while (bytesToRead > 0 && OrgApacheCommonsIoIOUtils_EOF != (read = [((JavaIoReader *) nil_chk(input)) readWithCharArray:buffer withInt:0 withInt:bytesToRead])) {
    [((JavaIoWriter *) nil_chk(output)) writeWithCharArray:buffer withInt:0 withInt:read];
    totalRead += read;
    if (length > 0) {
      bytesToRead = (jint) JavaLangMath_minWithLong_withLong_(length - totalRead, buffer->size_);
    }
  }
  return totalRead;
}

void OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_(JavaIoReader *input, JavaIoOutputStream *output) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withJavaNioCharsetCharset_(input, output, JavaNioCharsetCharset_defaultCharset());
}

void OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withJavaNioCharsetCharset_(JavaIoReader *input, JavaIoOutputStream *output, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoOutputStreamWriter *out = create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_(output, OrgApacheCommonsIoCharsets_toCharsetWithJavaNioCharsetCharset_(encoding));
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoWriter_(input, out);
  [out flush];
}

void OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withNSString_(JavaIoReader *input, JavaIoOutputStream *output, NSString *encoding) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_copy__WithJavaIoReader_withJavaIoOutputStream_withJavaNioCharsetCharset_(input, output, OrgApacheCommonsIoCharsets_toCharsetWithNSString_(encoding));
}

jboolean OrgApacheCommonsIoIOUtils_contentEqualsWithJavaIoInputStream_withJavaIoInputStream_(JavaIoInputStream *input1, JavaIoInputStream *input2) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (!([input1 isKindOfClass:[JavaIoBufferedInputStream class]])) {
    input1 = create_JavaIoBufferedInputStream_initWithJavaIoInputStream_(input1);
  }
  if (!([input2 isKindOfClass:[JavaIoBufferedInputStream class]])) {
    input2 = create_JavaIoBufferedInputStream_initWithJavaIoInputStream_(input2);
  }
  jint ch = [((JavaIoInputStream *) nil_chk(input1)) read];
  while (OrgApacheCommonsIoIOUtils_EOF != ch) {
    jint ch2 = [((JavaIoInputStream *) nil_chk(input2)) read];
    if (ch != ch2) {
      return false;
    }
    ch = [input1 read];
  }
  jint ch2 = [((JavaIoInputStream *) nil_chk(input2)) read];
  return ch2 == OrgApacheCommonsIoIOUtils_EOF;
}

jboolean OrgApacheCommonsIoIOUtils_contentEqualsWithJavaIoReader_withJavaIoReader_(JavaIoReader *input1, JavaIoReader *input2) {
  OrgApacheCommonsIoIOUtils_initialize();
  input1 = OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(input1);
  input2 = OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(input2);
  jint ch = [((JavaIoReader *) nil_chk(input1)) read];
  while (OrgApacheCommonsIoIOUtils_EOF != ch) {
    jint ch2 = [((JavaIoReader *) nil_chk(input2)) read];
    if (ch != ch2) {
      return false;
    }
    ch = [input1 read];
  }
  jint ch2 = [((JavaIoReader *) nil_chk(input2)) read];
  return ch2 == OrgApacheCommonsIoIOUtils_EOF;
}

jboolean OrgApacheCommonsIoIOUtils_contentEqualsIgnoreEOLWithJavaIoReader_withJavaIoReader_(JavaIoReader *input1, JavaIoReader *input2) {
  OrgApacheCommonsIoIOUtils_initialize();
  JavaIoBufferedReader *br1 = OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(input1);
  JavaIoBufferedReader *br2 = OrgApacheCommonsIoIOUtils_toBufferedReaderWithJavaIoReader_(input2);
  NSString *line1 = [((JavaIoBufferedReader *) nil_chk(br1)) readLine];
  NSString *line2 = [((JavaIoBufferedReader *) nil_chk(br2)) readLine];
  while (line1 != nil && line2 != nil && [line1 isEqual:line2]) {
    line1 = [br1 readLine];
    line2 = [br2 readLine];
  }
  return line1 == nil ? line2 == nil ? true : false : [line1 isEqual:line2];
}

jlong OrgApacheCommonsIoIOUtils_skipWithJavaIoInputStream_withLong_(JavaIoInputStream *input, jlong toSkip) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (toSkip < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"Skip count must be non-negative, actual: ", toSkip));
  }
  if (OrgApacheCommonsIoIOUtils_SKIP_BYTE_BUFFER == nil) {
    JreStrongAssignAndConsume(&OrgApacheCommonsIoIOUtils_SKIP_BYTE_BUFFER, [IOSByteArray newArrayWithLength:OrgApacheCommonsIoIOUtils_SKIP_BUFFER_SIZE]);
  }
  jlong remain = toSkip;
  while (remain > 0) {
    jlong n = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:OrgApacheCommonsIoIOUtils_SKIP_BYTE_BUFFER withInt:0 withInt:(jint) JavaLangMath_minWithLong_withLong_(remain, OrgApacheCommonsIoIOUtils_SKIP_BUFFER_SIZE)];
    if (n < 0) {
      break;
    }
    remain -= n;
  }
  return toSkip - remain;
}

jlong OrgApacheCommonsIoIOUtils_skipWithJavaIoReader_withLong_(JavaIoReader *input, jlong toSkip) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (toSkip < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"Skip count must be non-negative, actual: ", toSkip));
  }
  if (OrgApacheCommonsIoIOUtils_SKIP_CHAR_BUFFER == nil) {
    JreStrongAssignAndConsume(&OrgApacheCommonsIoIOUtils_SKIP_CHAR_BUFFER, [IOSCharArray newArrayWithLength:OrgApacheCommonsIoIOUtils_SKIP_BUFFER_SIZE]);
  }
  jlong remain = toSkip;
  while (remain > 0) {
    jlong n = [((JavaIoReader *) nil_chk(input)) readWithCharArray:OrgApacheCommonsIoIOUtils_SKIP_CHAR_BUFFER withInt:0 withInt:(jint) JavaLangMath_minWithLong_withLong_(remain, OrgApacheCommonsIoIOUtils_SKIP_BUFFER_SIZE)];
    if (n < 0) {
      break;
    }
    remain -= n;
  }
  return toSkip - remain;
}

void OrgApacheCommonsIoIOUtils_skipFullyWithJavaIoInputStream_withLong_(JavaIoInputStream *input, jlong toSkip) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (toSkip < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"Bytes to skip must not be negative: ", toSkip));
  }
  jlong skipped = OrgApacheCommonsIoIOUtils_skipWithJavaIoInputStream_withLong_(input, toSkip);
  if (skipped != toSkip) {
    @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$J$J", @"Bytes to skip: ", toSkip, @" actual: ", skipped));
  }
}

void OrgApacheCommonsIoIOUtils_skipFullyWithJavaIoReader_withLong_(JavaIoReader *input, jlong toSkip) {
  OrgApacheCommonsIoIOUtils_initialize();
  jlong skipped = OrgApacheCommonsIoIOUtils_skipWithJavaIoReader_withLong_(input, toSkip);
  if (skipped != toSkip) {
    @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$J$J", @"Chars to skip: ", toSkip, @" actual: ", skipped));
  }
}

jint OrgApacheCommonsIoIOUtils_readWithJavaIoReader_withCharArray_withInt_withInt_(JavaIoReader *input, IOSCharArray *buffer, jint offset, jint length) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (length < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Length must not be negative: ", length));
  }
  jint remaining = length;
  while (remaining > 0) {
    jint location = length - remaining;
    jint count = [((JavaIoReader *) nil_chk(input)) readWithCharArray:buffer withInt:offset + location withInt:remaining];
    if (OrgApacheCommonsIoIOUtils_EOF == count) {
      break;
    }
    remaining -= count;
  }
  return length - remaining;
}

jint OrgApacheCommonsIoIOUtils_readWithJavaIoReader_withCharArray_(JavaIoReader *input, IOSCharArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_readWithJavaIoReader_withCharArray_withInt_withInt_(input, buffer, 0, ((IOSCharArray *) nil_chk(buffer))->size_);
}

jint OrgApacheCommonsIoIOUtils_readWithJavaIoInputStream_withByteArray_withInt_withInt_(JavaIoInputStream *input, IOSByteArray *buffer, jint offset, jint length) {
  OrgApacheCommonsIoIOUtils_initialize();
  if (length < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Length must not be negative: ", length));
  }
  jint remaining = length;
  while (remaining > 0) {
    jint location = length - remaining;
    jint count = [((JavaIoInputStream *) nil_chk(input)) readWithByteArray:buffer withInt:offset + location withInt:remaining];
    if (OrgApacheCommonsIoIOUtils_EOF == count) {
      break;
    }
    remaining -= count;
  }
  return length - remaining;
}

jint OrgApacheCommonsIoIOUtils_readWithJavaIoInputStream_withByteArray_(JavaIoInputStream *input, IOSByteArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  return OrgApacheCommonsIoIOUtils_readWithJavaIoInputStream_withByteArray_withInt_withInt_(input, buffer, 0, ((IOSByteArray *) nil_chk(buffer))->size_);
}

void OrgApacheCommonsIoIOUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(JavaIoReader *input, IOSCharArray *buffer, jint offset, jint length) {
  OrgApacheCommonsIoIOUtils_initialize();
  jint actual = OrgApacheCommonsIoIOUtils_readWithJavaIoReader_withCharArray_withInt_withInt_(input, buffer, offset, length);
  if (actual != length) {
    @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$I$I", @"Length to read: ", length, @" actual: ", actual));
  }
}

void OrgApacheCommonsIoIOUtils_readFullyWithJavaIoReader_withCharArray_(JavaIoReader *input, IOSCharArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(input, buffer, 0, ((IOSCharArray *) nil_chk(buffer))->size_);
}

void OrgApacheCommonsIoIOUtils_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(JavaIoInputStream *input, IOSByteArray *buffer, jint offset, jint length) {
  OrgApacheCommonsIoIOUtils_initialize();
  jint actual = OrgApacheCommonsIoIOUtils_readWithJavaIoInputStream_withByteArray_withInt_withInt_(input, buffer, offset, length);
  if (actual != length) {
    @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$I$I", @"Length to read: ", length, @" actual: ", actual));
  }
}

void OrgApacheCommonsIoIOUtils_readFullyWithJavaIoInputStream_withByteArray_(JavaIoInputStream *input, IOSByteArray *buffer) {
  OrgApacheCommonsIoIOUtils_initialize();
  OrgApacheCommonsIoIOUtils_readFullyWithJavaIoInputStream_withByteArray_withInt_withInt_(input, buffer, 0, ((IOSByteArray *) nil_chk(buffer))->size_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoIOUtils)
