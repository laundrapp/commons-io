//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/output/StringBuilderWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoOutputStringBuilderWriter")
#ifdef RESTRICT_OrgApacheCommonsIoOutputStringBuilderWriter
#define INCLUDE_ALL_OrgApacheCommonsIoOutputStringBuilderWriter 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoOutputStringBuilderWriter 1
#endif
#undef RESTRICT_OrgApacheCommonsIoOutputStringBuilderWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoOutputStringBuilderWriter_) && (INCLUDE_ALL_OrgApacheCommonsIoOutputStringBuilderWriter || defined(INCLUDE_OrgApacheCommonsIoOutputStringBuilderWriter))
#define OrgApacheCommonsIoOutputStringBuilderWriter_

#define RESTRICT_JavaIoWriter 1
#define INCLUDE_JavaIoWriter 1
#include "java/io/Writer.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSCharArray;
@class JavaLangStringBuilder;
@protocol JavaLangCharSequence;

/*!
 @brief <code>Writer</code> implementation that outputs to a <code>StringBuilder</code>.
 <p>
  <strong>NOTE:</strong> This implementation, as an alternative to 
 <code>java.io.StringWriter</code>, provides an <i>un-synchronized</i>
  (i.e. for use in a single thread) implementation for better performance.
  For safe usage with multiple <code>Thread</code>s then 
 <code>java.io.StringWriter</code> should be used.
 @version $Id$
 @since 2.0
 */
@interface OrgApacheCommonsIoOutputStringBuilderWriter : JavaIoWriter < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Construct a new <code>StringBuilder</code> instance with default capacity.
 */
- (instancetype __nonnull)init;

/*!
 @brief Construct a new <code>StringBuilder</code> instance with the specified capacity.
 @param capacity The initial capacity of the underlying <code>StringBuilder</code>
 */
- (instancetype __nonnull)initWithInt:(jint)capacity;

/*!
 @brief Construct a new instance with the specified <code>StringBuilder</code>.
 @param builder The String builder
 */
- (instancetype __nonnull)initWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

/*!
 @brief Append a single character to this Writer.
 @param value The character to append
 @return This writer instance
 */
- (JavaIoWriter *)appendWithChar:(jchar)value;

/*!
 @brief Append a character sequence to this Writer.
 @param value The character to append
 @return This writer instance
 */
- (JavaIoWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)value;

/*!
 @brief Append a portion of a character sequence to the <code>StringBuilder</code>.
 @param value The character to append
 @param start The index of the first character
 @param end The index of the last character + 1
 @return This writer instance
 */
- (JavaIoWriter *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
                                         withInt:(jint)start
                                         withInt:(jint)end;

/*!
 @brief Closing this writer has no effect.
 */
- (void)close;

/*!
 @brief Flushing this writer has no effect.
 */
- (void)flush;

/*!
 @brief Return the underlying builder.
 @return The underlying builder
 */
- (JavaLangStringBuilder *)getBuilder;

/*!
 @brief Returns <code>StringBuilder.toString()</code>.
 @return The contents of the String builder.
 */
- (NSString *)description;

/*!
 @brief Write a portion of a character array to the <code>StringBuilder</code>.
 @param value The value to write
 @param offset The index of the first character
 @param length The number of characters to write
 */
- (void)writeWithCharArray:(IOSCharArray *)value
                   withInt:(jint)offset
                   withInt:(jint)length;

/*!
 @brief Write a String to the <code>StringBuilder</code>.
 @param value The value to write
 */
- (void)writeWithNSString:(NSString *)value;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoOutputStringBuilderWriter)

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputStringBuilderWriter_init(OrgApacheCommonsIoOutputStringBuilderWriter *self);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputStringBuilderWriter *new_OrgApacheCommonsIoOutputStringBuilderWriter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputStringBuilderWriter *create_OrgApacheCommonsIoOutputStringBuilderWriter_init(void);

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputStringBuilderWriter_initWithInt_(OrgApacheCommonsIoOutputStringBuilderWriter *self, jint capacity);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputStringBuilderWriter *new_OrgApacheCommonsIoOutputStringBuilderWriter_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputStringBuilderWriter *create_OrgApacheCommonsIoOutputStringBuilderWriter_initWithInt_(jint capacity);

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputStringBuilderWriter_initWithJavaLangStringBuilder_(OrgApacheCommonsIoOutputStringBuilderWriter *self, JavaLangStringBuilder *builder);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputStringBuilderWriter *new_OrgApacheCommonsIoOutputStringBuilderWriter_initWithJavaLangStringBuilder_(JavaLangStringBuilder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputStringBuilderWriter *create_OrgApacheCommonsIoOutputStringBuilderWriter_initWithJavaLangStringBuilder_(JavaLangStringBuilder *builder);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoOutputStringBuilderWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoOutputStringBuilderWriter")
