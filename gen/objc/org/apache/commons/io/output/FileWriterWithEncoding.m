//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/output/FileWriterWithEncoding.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/Writer.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/CharsetEncoder.h"
#include "org/apache/commons/io/FileUtils.h"
#include "org/apache/commons/io/IOUtils.h"
#include "org/apache/commons/io/output/FileWriterWithEncoding.h"

@interface OrgApacheCommonsIoOutputFileWriterWithEncoding () {
 @public
  /*!
   @brief The writer to decorate.
   */
  JavaIoWriter *out_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsIoOutputFileWriterWithEncoding, out_, JavaIoWriter *)

__attribute__((unused)) static JavaIoWriter *OrgApacheCommonsIoOutputFileWriterWithEncoding_initWriterWithJavaIoFile_withId_withBoolean_(JavaIoFile *file, id encoding, jboolean append);

@implementation OrgApacheCommonsIoOutputFileWriterWithEncoding

- (instancetype)initWithNSString:(NSString *)filename
                    withNSString:(NSString *)encoding {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_(self, filename, encoding);
  return self;
}

- (instancetype)initWithNSString:(NSString *)filename
                    withNSString:(NSString *)encoding
                     withBoolean:(jboolean)append {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_withBoolean_(self, filename, encoding, append);
  return self;
}

- (instancetype)initWithNSString:(NSString *)filename
       withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_(self, filename, encoding);
  return self;
}

- (instancetype)initWithNSString:(NSString *)filename
       withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding
                     withBoolean:(jboolean)append {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_withBoolean_(self, filename, encoding, append);
  return self;
}

- (instancetype)initWithNSString:(NSString *)filename
withJavaNioCharsetCharsetEncoder:(JavaNioCharsetCharsetEncoder *)encoding {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_(self, filename, encoding);
  return self;
}

- (instancetype)initWithNSString:(NSString *)filename
withJavaNioCharsetCharsetEncoder:(JavaNioCharsetCharsetEncoder *)encoding
                     withBoolean:(jboolean)append {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_withBoolean_(self, filename, encoding, append);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
                      withNSString:(NSString *)encoding {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_(self, file, encoding);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
                      withNSString:(NSString *)encoding
                       withBoolean:(jboolean)append {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(self, file, encoding, append);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
         withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_(self, file, encoding);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
         withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding
                       withBoolean:(jboolean)append {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(self, file, encoding, append);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
  withJavaNioCharsetCharsetEncoder:(JavaNioCharsetCharsetEncoder *)encoding {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_(self, file, encoding);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
  withJavaNioCharsetCharsetEncoder:(JavaNioCharsetCharsetEncoder *)encoding
                       withBoolean:(jboolean)append {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(self, file, encoding, append);
  return self;
}

- (void)writeWithInt:(jint)idx {
  [((JavaIoWriter *) nil_chk(out_)) writeWithInt:idx];
}

- (void)writeWithCharArray:(IOSCharArray *)chr {
  [((JavaIoWriter *) nil_chk(out_)) writeWithCharArray:chr];
}

- (void)writeWithCharArray:(IOSCharArray *)chr
                   withInt:(jint)st
                   withInt:(jint)end {
  [((JavaIoWriter *) nil_chk(out_)) writeWithCharArray:chr withInt:st withInt:end];
}

- (void)writeWithNSString:(NSString *)str {
  [((JavaIoWriter *) nil_chk(out_)) writeWithNSString:str];
}

- (void)writeWithNSString:(NSString *)str
                  withInt:(jint)st
                  withInt:(jint)end {
  [((JavaIoWriter *) nil_chk(out_)) writeWithNSString:str withInt:st withInt:end];
}

- (void)flush {
  [((JavaIoWriter *) nil_chk(out_)) flush];
}

- (void)close {
  [((JavaIoWriter *) nil_chk(out_)) close];
}

- (void)dealloc {
  RELEASE_(out_);
  [super dealloc];
}

@end

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, NSString *filename, NSString *encoding) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(self, create_JavaIoFile_initWithNSString_(filename), encoding, false);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_(NSString *filename, NSString *encoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withNSString_, filename, encoding)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_(NSString *filename, NSString *encoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withNSString_, filename, encoding)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_withBoolean_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, NSString *filename, NSString *encoding, jboolean append) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(self, create_JavaIoFile_initWithNSString_(filename), encoding, append);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_withBoolean_(NSString *filename, NSString *encoding, jboolean append) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withNSString_withBoolean_, filename, encoding, append)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withNSString_withBoolean_(NSString *filename, NSString *encoding, jboolean append) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withNSString_withBoolean_, filename, encoding, append)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, NSString *filename, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(self, create_JavaIoFile_initWithNSString_(filename), encoding, false);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_(NSString *filename, JavaNioCharsetCharset *encoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharset_, filename, encoding)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_(NSString *filename, JavaNioCharsetCharset *encoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharset_, filename, encoding)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_withBoolean_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, NSString *filename, JavaNioCharsetCharset *encoding, jboolean append) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(self, create_JavaIoFile_initWithNSString_(filename), encoding, append);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_withBoolean_(NSString *filename, JavaNioCharsetCharset *encoding, jboolean append) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharset_withBoolean_, filename, encoding, append)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharset_withBoolean_(NSString *filename, JavaNioCharsetCharset *encoding, jboolean append) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharset_withBoolean_, filename, encoding, append)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, NSString *filename, JavaNioCharsetCharsetEncoder *encoding) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(self, create_JavaIoFile_initWithNSString_(filename), encoding, false);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_(NSString *filename, JavaNioCharsetCharsetEncoder *encoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharsetEncoder_, filename, encoding)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_(NSString *filename, JavaNioCharsetCharsetEncoder *encoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharsetEncoder_, filename, encoding)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_withBoolean_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, NSString *filename, JavaNioCharsetCharsetEncoder *encoding, jboolean append) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(self, create_JavaIoFile_initWithNSString_(filename), encoding, append);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_withBoolean_(NSString *filename, JavaNioCharsetCharsetEncoder *encoding, jboolean append) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharsetEncoder_withBoolean_, filename, encoding, append)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithNSString_withJavaNioCharsetCharsetEncoder_withBoolean_(NSString *filename, JavaNioCharsetCharsetEncoder *encoding, jboolean append) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithNSString_withJavaNioCharsetCharsetEncoder_withBoolean_, filename, encoding, append)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, JavaIoFile *file, NSString *encoding) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(self, file, encoding, false);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *encoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withNSString_, file, encoding)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *encoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withNSString_, file, encoding)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, JavaIoFile *file, NSString *encoding, jboolean append) {
  JavaIoWriter_init(self);
  JreStrongAssign(&self->out_, OrgApacheCommonsIoOutputFileWriterWithEncoding_initWriterWithJavaIoFile_withId_withBoolean_(file, encoding, append));
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(JavaIoFile *file, NSString *encoding, jboolean append) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withNSString_withBoolean_, file, encoding, append)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withNSString_withBoolean_(JavaIoFile *file, NSString *encoding, jboolean append) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withNSString_withBoolean_, file, encoding, append)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, JavaIoFile *file, JavaNioCharsetCharset *encoding) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(self, file, encoding, false);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *encoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharset_, file, encoding)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_(JavaIoFile *file, JavaNioCharsetCharset *encoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharset_, file, encoding)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, JavaIoFile *file, JavaNioCharsetCharset *encoding, jboolean append) {
  JavaIoWriter_init(self);
  JreStrongAssign(&self->out_, OrgApacheCommonsIoOutputFileWriterWithEncoding_initWriterWithJavaIoFile_withId_withBoolean_(file, encoding, append));
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(JavaIoFile *file, JavaNioCharsetCharset *encoding, jboolean append) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_, file, encoding, append)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_(JavaIoFile *file, JavaNioCharsetCharset *encoding, jboolean append) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharset_withBoolean_, file, encoding, append)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, JavaIoFile *file, JavaNioCharsetCharsetEncoder *encoding) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(self, file, encoding, false);
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_(JavaIoFile *file, JavaNioCharsetCharsetEncoder *encoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_, file, encoding)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_(JavaIoFile *file, JavaNioCharsetCharsetEncoder *encoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_, file, encoding)
}

void OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(OrgApacheCommonsIoOutputFileWriterWithEncoding *self, JavaIoFile *file, JavaNioCharsetCharsetEncoder *encoding, jboolean append) {
  JavaIoWriter_init(self);
  JreStrongAssign(&self->out_, OrgApacheCommonsIoOutputFileWriterWithEncoding_initWriterWithJavaIoFile_withId_withBoolean_(file, encoding, append));
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *new_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(JavaIoFile *file, JavaNioCharsetCharsetEncoder *encoding, jboolean append) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_, file, encoding, append)
}

OrgApacheCommonsIoOutputFileWriterWithEncoding *create_OrgApacheCommonsIoOutputFileWriterWithEncoding_initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_(JavaIoFile *file, JavaNioCharsetCharsetEncoder *encoding, jboolean append) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoOutputFileWriterWithEncoding, initWithJavaIoFile_withJavaNioCharsetCharsetEncoder_withBoolean_, file, encoding, append)
}

JavaIoWriter *OrgApacheCommonsIoOutputFileWriterWithEncoding_initWriterWithJavaIoFile_withId_withBoolean_(JavaIoFile *file, id encoding, jboolean append) {
  OrgApacheCommonsIoOutputFileWriterWithEncoding_initialize();
  if (file == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"File is missing");
  }
  if (encoding == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Encoding is missing");
  }
  jboolean fileExistedAlready = [file exists];
  JavaIoOutputStream *stream = nil;
  JavaIoWriter *writer = nil;
  @try {
    stream = create_JavaIoFileOutputStream_initWithJavaIoFile_withBoolean_(file, append);
    if ([encoding isKindOfClass:[JavaNioCharsetCharset class]]) {
      writer = create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharset_(stream, (JavaNioCharsetCharset *) cast_chk(encoding, [JavaNioCharsetCharset class]));
    }
    else if ([encoding isKindOfClass:[JavaNioCharsetCharsetEncoder class]]) {
      writer = create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withJavaNioCharsetCharsetEncoder_(stream, (JavaNioCharsetCharsetEncoder *) cast_chk(encoding, [JavaNioCharsetCharsetEncoder class]));
    }
    else {
      writer = create_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(stream, (NSString *) cast_chk(encoding, [NSString class]));
    }
  }
  @catch (JavaIoIOException *ex) {
    OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoWriter_(writer);
    OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoOutputStream_(stream);
    if (fileExistedAlready == false) {
      OrgApacheCommonsIoFileUtils_deleteQuietlyWithJavaIoFile_(file);
    }
    @throw ex;
  }
  @catch (JavaLangRuntimeException *ex) {
    OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoWriter_(writer);
    OrgApacheCommonsIoIOUtils_closeQuietlyWithJavaIoOutputStream_(stream);
    if (fileExistedAlready == false) {
      OrgApacheCommonsIoFileUtils_deleteQuietlyWithJavaIoFile_(file);
    }
    @throw ex;
  }
  return writer;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoOutputFileWriterWithEncoding)
