//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/output/XmlStreamWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoOutputXmlStreamWriter")
#ifdef RESTRICT_OrgApacheCommonsIoOutputXmlStreamWriter
#define INCLUDE_ALL_OrgApacheCommonsIoOutputXmlStreamWriter 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoOutputXmlStreamWriter 1
#endif
#undef RESTRICT_OrgApacheCommonsIoOutputXmlStreamWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoOutputXmlStreamWriter_) && (INCLUDE_ALL_OrgApacheCommonsIoOutputXmlStreamWriter || defined(INCLUDE_OrgApacheCommonsIoOutputXmlStreamWriter))
#define OrgApacheCommonsIoOutputXmlStreamWriter_

#define RESTRICT_JavaIoWriter 1
#define INCLUDE_JavaIoWriter 1
#include "java/io/Writer.h"

@class IOSCharArray;
@class JavaIoFile;
@class JavaIoOutputStream;
@class JavaUtilRegexPattern;

/*!
 @brief Character stream that handles all the necessary Voodo to figure out the
  charset encoding of the XML document written to the stream.
 @version $Id$
 - seealso: XmlStreamReader
 @since 2.0
 */
@interface OrgApacheCommonsIoOutputXmlStreamWriter : JavaIoWriter

#pragma mark Public

/*!
 @brief Construct an new XML stream writer for the specified file
  with a default encoding of UTF-8.
 @param file The file to write to
 @throw FileNotFoundExceptionif there is an error creating or
  opening the file
 */
- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file;

/*!
 @brief Construct an new XML stream writer for the specified file
  with the specified default encoding.
 @param file The file to write to
 @param defaultEncoding The default encoding if not encoding could be detected
 @throw FileNotFoundExceptionif there is an error creating or
  opening the file
 */
- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file
                                withNSString:(NSString *)defaultEncoding;

/*!
 @brief Construct an new XML stream writer for the specified output stream
  with a default encoding of UTF-8.
 @param outArg The output stream
 */
- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @brief Construct an new XML stream writer for the specified output stream
  with the specified default encoding.
 @param outArg The output stream
 @param defaultEncoding The default encoding if not encoding could be detected
 */
- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                        withNSString:(NSString *)defaultEncoding;

/*!
 @brief Close the underlying writer.
 @throw IOExceptionif an error occurs closing the underlying writer
 */
- (void)close;

/*!
 @brief Flush the underlying writer.
 @throw IOExceptionif an error occurs flushing the underlying writer
 */
- (void)flush;

/*!
 @brief Return the default encoding.
 @return the default encoding
 */
- (NSString *)getDefaultEncoding;

/*!
 @brief Return the detected encoding.
 @return the detected encoding
 */
- (NSString *)getEncoding;

/*!
 @brief Write the characters to the underlying writer, detecing encoding.
 @param cbuf the buffer to write the characters from
 @param off The start offset
 @param len The number of characters to write
 @throw IOExceptionif an error occurs detecting the encoding
 */
- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithId:(id)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoOutputXmlStreamWriter)

inline JavaUtilRegexPattern *OrgApacheCommonsIoOutputXmlStreamWriter_get_ENCODING_PATTERN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *OrgApacheCommonsIoOutputXmlStreamWriter_ENCODING_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoOutputXmlStreamWriter, ENCODING_PATTERN, JavaUtilRegexPattern *)

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoOutputStream_(OrgApacheCommonsIoOutputXmlStreamWriter *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *new_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *create_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoOutputStream_withNSString_(OrgApacheCommonsIoOutputXmlStreamWriter *self, JavaIoOutputStream *outArg, NSString *defaultEncoding);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *new_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoOutputStream_withNSString_(JavaIoOutputStream *outArg, NSString *defaultEncoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *create_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoOutputStream_withNSString_(JavaIoOutputStream *outArg, NSString *defaultEncoding);

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoFile_(OrgApacheCommonsIoOutputXmlStreamWriter *self, JavaIoFile *file);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *new_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *create_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoFile_(JavaIoFile *file);

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoFile_withNSString_(OrgApacheCommonsIoOutputXmlStreamWriter *self, JavaIoFile *file, NSString *defaultEncoding);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *new_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *defaultEncoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputXmlStreamWriter *create_OrgApacheCommonsIoOutputXmlStreamWriter_initWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *defaultEncoding);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoOutputXmlStreamWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoOutputXmlStreamWriter")
