//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/output/CountingOutputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoOutputCountingOutputStream")
#ifdef RESTRICT_OrgApacheCommonsIoOutputCountingOutputStream
#define INCLUDE_ALL_OrgApacheCommonsIoOutputCountingOutputStream 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoOutputCountingOutputStream 1
#endif
#undef RESTRICT_OrgApacheCommonsIoOutputCountingOutputStream

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoOutputCountingOutputStream_) && (INCLUDE_ALL_OrgApacheCommonsIoOutputCountingOutputStream || defined(INCLUDE_OrgApacheCommonsIoOutputCountingOutputStream))
#define OrgApacheCommonsIoOutputCountingOutputStream_

#define RESTRICT_OrgApacheCommonsIoOutputProxyOutputStream 1
#define INCLUDE_OrgApacheCommonsIoOutputProxyOutputStream 1
#include "org/apache/commons/io/output/ProxyOutputStream.h"

@class JavaIoOutputStream;

/*!
 @brief A decorating output stream that counts the number of bytes that have passed
  through the stream so far.
 <p>
  A typical use case would be during debugging, to ensure that data is being
  written as expected.
 @version $Id$
 */
@interface OrgApacheCommonsIoOutputCountingOutputStream : OrgApacheCommonsIoOutputProxyOutputStream

#pragma mark Public

/*!
 @brief Constructs a new CountingOutputStream.
 @param outArg the OutputStream to write to
 */
- (instancetype __nonnull)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @brief The number of bytes that have passed through this stream.
 <p>
  NOTE: This method is an alternative for <code>getCount()</code>.
  It was added because that method returns an integer which will
  result in incorrect count for files over 2GB.
 @return the number of bytes accumulated
 @since 1.3
 */
- (jlong)getByteCount;

/*!
 @brief The number of bytes that have passed through this stream.
 <p>
  NOTE: From v1.3 this method throws an ArithmeticException if the
  count is greater than can be expressed by an <code>int</code>.
  See <code>getByteCount()</code> for a method using a <code>long</code>.
 @return the number of bytes accumulated
 @throw ArithmeticExceptionif the byte count is too large
 */
- (jint)getCount;

/*!
 @brief Set the byte count back to 0.
 <p>
  NOTE: This method is an alternative for <code>resetCount()</code>.
  It was added because that method returns an integer which will
  result in incorrect count for files over 2GB.
 @return the count previous to resetting
 @since 1.3
 */
- (jlong)resetByteCount;

/*!
 @brief Set the byte count back to 0.
 <p>
  NOTE: From v1.3 this method throws an ArithmeticException if the
  count is greater than can be expressed by an <code>int</code>.
  See <code>resetByteCount()</code> for a method using a <code>long</code>.
 @return the count previous to resetting
 @throw ArithmeticExceptionif the byte count is too large
 */
- (jint)resetCount;

#pragma mark Protected

/*!
 @brief Updates the count with the number of bytes that are being written.
 @param n number of bytes to be written to the stream
 @since 2.0
 */
- (void)beforeWriteWithInt:(jint)n;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoOutputCountingOutputStream)

FOUNDATION_EXPORT void OrgApacheCommonsIoOutputCountingOutputStream_initWithJavaIoOutputStream_(OrgApacheCommonsIoOutputCountingOutputStream *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT OrgApacheCommonsIoOutputCountingOutputStream *new_OrgApacheCommonsIoOutputCountingOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoOutputCountingOutputStream *create_OrgApacheCommonsIoOutputCountingOutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoOutputCountingOutputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoOutputCountingOutputStream")
