//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/IOExceptionWithCause.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoIOExceptionWithCause")
#ifdef RESTRICT_OrgApacheCommonsIoIOExceptionWithCause
#define INCLUDE_ALL_OrgApacheCommonsIoIOExceptionWithCause 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoIOExceptionWithCause 1
#endif
#undef RESTRICT_OrgApacheCommonsIoIOExceptionWithCause

#if !defined (OrgApacheCommonsIoIOExceptionWithCause_) && (INCLUDE_ALL_OrgApacheCommonsIoIOExceptionWithCause || defined(INCLUDE_OrgApacheCommonsIoIOExceptionWithCause))
#define OrgApacheCommonsIoIOExceptionWithCause_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

/*!
 @brief Subclasses IOException with the <code>Throwable</code> constructors missing before Java 6.If you are using Java 6,
  consider this class deprecated and use <code>IOException</code>.
 @version $Id$
 @since 1.4
 */
@interface OrgApacheCommonsIoIOExceptionWithCause : JavaIoIOException

#pragma mark Public

/*!
 @brief Constructs a new instance with the given message and cause.
 <p>
  As specified in <code>Throwable</code>, the message in the given <code>cause</code> is not used in this instance's
  message. 
 </p>
 @param message the message (see 
 <code>getMessage()</code> )
 @param cause the cause (see 
 <code>getCause()</code> ). A <code>null</code>  value is allowed.
 */
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Constructs a new instance with the given cause.
 <p>
  The message is set to <code>cause==null ? null : cause.toString()</code>, which by default contains the class
  and message of <code>cause</code>. This constructor is useful for call sites that just wrap another throwable. 
 </p>
 @param cause the cause (see 
 <code>getCause()</code> ). A <code>null</code>  value is allowed.
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoIOExceptionWithCause)

FOUNDATION_EXPORT void OrgApacheCommonsIoIOExceptionWithCause_initWithNSString_withJavaLangThrowable_(OrgApacheCommonsIoIOExceptionWithCause *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgApacheCommonsIoIOExceptionWithCause *new_OrgApacheCommonsIoIOExceptionWithCause_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoIOExceptionWithCause *create_OrgApacheCommonsIoIOExceptionWithCause_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT void OrgApacheCommonsIoIOExceptionWithCause_initWithJavaLangThrowable_(OrgApacheCommonsIoIOExceptionWithCause *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgApacheCommonsIoIOExceptionWithCause *new_OrgApacheCommonsIoIOExceptionWithCause_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoIOExceptionWithCause *create_OrgApacheCommonsIoIOExceptionWithCause_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoIOExceptionWithCause)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoIOExceptionWithCause")
