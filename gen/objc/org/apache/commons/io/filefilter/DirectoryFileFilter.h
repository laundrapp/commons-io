//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/DirectoryFileFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterDirectoryFileFilter")
#ifdef RESTRICT_OrgApacheCommonsIoFilefilterDirectoryFileFilter
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterDirectoryFileFilter 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterDirectoryFileFilter 1
#endif
#undef RESTRICT_OrgApacheCommonsIoFilefilterDirectoryFileFilter

#if !defined (OrgApacheCommonsIoFilefilterDirectoryFileFilter_) && (INCLUDE_ALL_OrgApacheCommonsIoFilefilterDirectoryFileFilter || defined(INCLUDE_OrgApacheCommonsIoFilefilterDirectoryFileFilter))
#define OrgApacheCommonsIoFilefilterDirectoryFileFilter_

#define RESTRICT_OrgApacheCommonsIoFilefilterAbstractFileFilter 1
#define INCLUDE_OrgApacheCommonsIoFilefilterAbstractFileFilter 1
#include "org/apache/commons/io/filefilter/AbstractFileFilter.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;
@protocol OrgApacheCommonsIoFilefilterIOFileFilter;

/*!
 @brief This filter accepts <code>File</code>s that are directories.
 <p>
  For example, here is how to print out a list of the 
  current directory's subdirectories: 
 @code

  File dir = new File(".");
  String[] files = dir.list( DirectoryFileFilter.INSTANCE );
  for ( int i = 0; i &lt; files.length; i++ ) {
      System.out.println(files[i]);
  } 
  
@endcode
 @since 1.0
 @version $Id$
 - seealso: FileFilterUtils#directoryFileFilter()
 */
@interface OrgApacheCommonsIoFilefilterDirectoryFileFilter : OrgApacheCommonsIoFilefilterAbstractFileFilter < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Checks to see if the file is a directory.
 @param file the File to check
 @return true if the file is a directory
 */
- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file;

#pragma mark Protected

/*!
 @brief Restrictive consructor.
 */
- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoFilefilterDirectoryFileFilter)

/*!
 @brief Singleton instance of directory filter.
 @since 1.3
 */
inline id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterDirectoryFileFilter_get_DIRECTORY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterDirectoryFileFilter_DIRECTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoFilefilterDirectoryFileFilter, DIRECTORY, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

/*!
 @brief Singleton instance of directory filter.
 Please use the identical DirectoryFileFilter.DIRECTORY constant.
  The new name is more JDK 1.5 friendly as it doesn't clash with other
  values when using static imports.
 */
inline id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterDirectoryFileFilter_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterDirectoryFileFilter_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoFilefilterDirectoryFileFilter, INSTANCE, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

FOUNDATION_EXPORT void OrgApacheCommonsIoFilefilterDirectoryFileFilter_init(OrgApacheCommonsIoFilefilterDirectoryFileFilter *self);

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterDirectoryFileFilter *new_OrgApacheCommonsIoFilefilterDirectoryFileFilter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterDirectoryFileFilter *create_OrgApacheCommonsIoFilefilterDirectoryFileFilter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoFilefilterDirectoryFileFilter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterDirectoryFileFilter")
