//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/CanReadFileFilter.java
//

#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "org/apache/commons/io/filefilter/AbstractFileFilter.h"
#include "org/apache/commons/io/filefilter/AndFileFilter.h"
#include "org/apache/commons/io/filefilter/CanReadFileFilter.h"
#include "org/apache/commons/io/filefilter/CanWriteFileFilter.h"
#include "org/apache/commons/io/filefilter/IOFileFilter.h"
#include "org/apache/commons/io/filefilter/NotFileFilter.h"

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsIoFilefilterCanReadFileFilter)

id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanReadFileFilter_CAN_READ;
id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanReadFileFilter_CANNOT_READ;
id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanReadFileFilter_READ_ONLY;

@implementation OrgApacheCommonsIoFilefilterCanReadFileFilter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  OrgApacheCommonsIoFilefilterCanReadFileFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file {
  return [((JavaIoFile *) nil_chk(file)) canRead];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsIoFilefilterCanReadFileFilter class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsIoFilefilterCanReadFileFilter_CAN_READ, new_OrgApacheCommonsIoFilefilterCanReadFileFilter_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsIoFilefilterCanReadFileFilter_CANNOT_READ, new_OrgApacheCommonsIoFilefilterNotFileFilter_initWithOrgApacheCommonsIoFilefilterIOFileFilter_(OrgApacheCommonsIoFilefilterCanReadFileFilter_CAN_READ));
    JreStrongAssignAndConsume(&OrgApacheCommonsIoFilefilterCanReadFileFilter_READ_ONLY, new_OrgApacheCommonsIoFilefilterAndFileFilter_initWithOrgApacheCommonsIoFilefilterIOFileFilter_withOrgApacheCommonsIoFilefilterIOFileFilter_(OrgApacheCommonsIoFilefilterCanReadFileFilter_CAN_READ, JreLoadStatic(OrgApacheCommonsIoFilefilterCanWriteFileFilter, CANNOT_WRITE)));
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsIoFilefilterCanReadFileFilter)
  }
}

@end

void OrgApacheCommonsIoFilefilterCanReadFileFilter_init(OrgApacheCommonsIoFilefilterCanReadFileFilter *self) {
  OrgApacheCommonsIoFilefilterAbstractFileFilter_init(self);
}

OrgApacheCommonsIoFilefilterCanReadFileFilter *new_OrgApacheCommonsIoFilefilterCanReadFileFilter_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterCanReadFileFilter, init)
}

OrgApacheCommonsIoFilefilterCanReadFileFilter *create_OrgApacheCommonsIoFilefilterCanReadFileFilter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterCanReadFileFilter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoFilefilterCanReadFileFilter)
