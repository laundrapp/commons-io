//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/SuffixFileFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/List.h"
#include "org/apache/commons/io/IOCase.h"
#include "org/apache/commons/io/filefilter/AbstractFileFilter.h"
#include "org/apache/commons/io/filefilter/SuffixFileFilter.h"

@interface OrgApacheCommonsIoFilefilterSuffixFileFilter () {
 @public
  /*!
   @brief The filename suffixes to search for
   */
  IOSObjectArray *suffixes_;
  /*!
   @brief Whether the comparison is case sensitive.
   */
  OrgApacheCommonsIoIOCase *caseSensitivity_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsIoFilefilterSuffixFileFilter, suffixes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsIoFilefilterSuffixFileFilter, caseSensitivity_, OrgApacheCommonsIoIOCase *)

@implementation OrgApacheCommonsIoFilefilterSuffixFileFilter

- (instancetype)initWithNSString:(NSString *)suffix {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_(self, suffix);
  return self;
}

- (instancetype)initWithNSString:(NSString *)suffix
    withOrgApacheCommonsIoIOCase:(OrgApacheCommonsIoIOCase *)caseSensitivity {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_withOrgApacheCommonsIoIOCase_(self, suffix, caseSensitivity);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)suffixes {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_(self, suffixes);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)suffixes
         withOrgApacheCommonsIoIOCase:(OrgApacheCommonsIoIOCase *)caseSensitivity {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_withOrgApacheCommonsIoIOCase_(self, suffixes, caseSensitivity);
  return self;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)suffixes {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_(self, suffixes);
  return self;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)suffixes
        withOrgApacheCommonsIoIOCase:(OrgApacheCommonsIoIOCase *)caseSensitivity {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_withOrgApacheCommonsIoIOCase_(self, suffixes, caseSensitivity);
  return self;
}

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file {
  NSString *name = [((JavaIoFile *) nil_chk(file)) getName];
  {
    IOSObjectArray *a__ = self->suffixes_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *suffix = *b__++;
      if ([((OrgApacheCommonsIoIOCase *) nil_chk(caseSensitivity_)) checkEndsWithWithNSString:name withNSString:suffix]) {
        return true;
      }
    }
  }
  return false;
}

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file
                    withNSString:(NSString *)name {
  {
    IOSObjectArray *a__ = self->suffixes_;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *suffix = *b__++;
      if ([((OrgApacheCommonsIoIOCase *) nil_chk(caseSensitivity_)) checkEndsWithWithNSString:name withNSString:suffix]) {
        return true;
      }
    }
  }
  return false;
}

- (NSString *)description {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:[super description]];
  [buffer appendWithNSString:@"("];
  if (suffixes_ != nil) {
    for (jint i = 0; i < suffixes_->size_; i++) {
      if (i > 0) {
        [buffer appendWithNSString:@","];
      }
      [buffer appendWithNSString:IOSObjectArray_Get(suffixes_, i)];
    }
  }
  [buffer appendWithNSString:@")"];
  return [buffer description];
}

- (void)dealloc {
  RELEASE_(suffixes_);
  RELEASE_(caseSensitivity_);
  [super dealloc];
}

@end

void OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_(OrgApacheCommonsIoFilefilterSuffixFileFilter *self, NSString *suffix) {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_withOrgApacheCommonsIoIOCase_(self, suffix, JreLoadStatic(OrgApacheCommonsIoIOCase, SENSITIVE));
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *new_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_(NSString *suffix) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSString_, suffix)
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *create_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_(NSString *suffix) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSString_, suffix)
}

void OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_withOrgApacheCommonsIoIOCase_(OrgApacheCommonsIoFilefilterSuffixFileFilter *self, NSString *suffix, OrgApacheCommonsIoIOCase *caseSensitivity) {
  OrgApacheCommonsIoFilefilterAbstractFileFilter_init(self);
  if (suffix == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The suffix must not be null");
  }
  JreStrongAssignAndConsume(&self->suffixes_, [IOSObjectArray newArrayWithObjects:(id[]){ suffix } count:1 type:NSString_class_()]);
  JreStrongAssign(&self->caseSensitivity_, caseSensitivity == nil ? JreLoadStatic(OrgApacheCommonsIoIOCase, SENSITIVE) : caseSensitivity);
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *new_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_withOrgApacheCommonsIoIOCase_(NSString *suffix, OrgApacheCommonsIoIOCase *caseSensitivity) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSString_withOrgApacheCommonsIoIOCase_, suffix, caseSensitivity)
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *create_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSString_withOrgApacheCommonsIoIOCase_(NSString *suffix, OrgApacheCommonsIoIOCase *caseSensitivity) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSString_withOrgApacheCommonsIoIOCase_, suffix, caseSensitivity)
}

void OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_(OrgApacheCommonsIoFilefilterSuffixFileFilter *self, IOSObjectArray *suffixes) {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_withOrgApacheCommonsIoIOCase_(self, suffixes, JreLoadStatic(OrgApacheCommonsIoIOCase, SENSITIVE));
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *new_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_(IOSObjectArray *suffixes) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSStringArray_, suffixes)
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *create_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_(IOSObjectArray *suffixes) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSStringArray_, suffixes)
}

void OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_withOrgApacheCommonsIoIOCase_(OrgApacheCommonsIoFilefilterSuffixFileFilter *self, IOSObjectArray *suffixes, OrgApacheCommonsIoIOCase *caseSensitivity) {
  OrgApacheCommonsIoFilefilterAbstractFileFilter_init(self);
  if (suffixes == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The array of suffixes must not be null");
  }
  JreStrongAssignAndConsume(&self->suffixes_, [IOSObjectArray newArrayWithLength:suffixes->size_ type:NSString_class_()]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(suffixes, 0, self->suffixes_, 0, suffixes->size_);
  JreStrongAssign(&self->caseSensitivity_, caseSensitivity == nil ? JreLoadStatic(OrgApacheCommonsIoIOCase, SENSITIVE) : caseSensitivity);
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *new_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_withOrgApacheCommonsIoIOCase_(IOSObjectArray *suffixes, OrgApacheCommonsIoIOCase *caseSensitivity) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSStringArray_withOrgApacheCommonsIoIOCase_, suffixes, caseSensitivity)
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *create_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithNSStringArray_withOrgApacheCommonsIoIOCase_(IOSObjectArray *suffixes, OrgApacheCommonsIoIOCase *caseSensitivity) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithNSStringArray_withOrgApacheCommonsIoIOCase_, suffixes, caseSensitivity)
}

void OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_(OrgApacheCommonsIoFilefilterSuffixFileFilter *self, id<JavaUtilList> suffixes) {
  OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_withOrgApacheCommonsIoIOCase_(self, suffixes, JreLoadStatic(OrgApacheCommonsIoIOCase, SENSITIVE));
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *new_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_(id<JavaUtilList> suffixes) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithJavaUtilList_, suffixes)
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *create_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_(id<JavaUtilList> suffixes) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithJavaUtilList_, suffixes)
}

void OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_withOrgApacheCommonsIoIOCase_(OrgApacheCommonsIoFilefilterSuffixFileFilter *self, id<JavaUtilList> suffixes, OrgApacheCommonsIoIOCase *caseSensitivity) {
  OrgApacheCommonsIoFilefilterAbstractFileFilter_init(self);
  if (suffixes == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The list of suffixes must not be null");
  }
  JreStrongAssign(&self->suffixes_, [suffixes toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[suffixes size] type:NSString_class_()]]);
  JreStrongAssign(&self->caseSensitivity_, caseSensitivity == nil ? JreLoadStatic(OrgApacheCommonsIoIOCase, SENSITIVE) : caseSensitivity);
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *new_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_withOrgApacheCommonsIoIOCase_(id<JavaUtilList> suffixes, OrgApacheCommonsIoIOCase *caseSensitivity) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithJavaUtilList_withOrgApacheCommonsIoIOCase_, suffixes, caseSensitivity)
}

OrgApacheCommonsIoFilefilterSuffixFileFilter *create_OrgApacheCommonsIoFilefilterSuffixFileFilter_initWithJavaUtilList_withOrgApacheCommonsIoIOCase_(id<JavaUtilList> suffixes, OrgApacheCommonsIoIOCase *caseSensitivity) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterSuffixFileFilter, initWithJavaUtilList_withOrgApacheCommonsIoIOCase_, suffixes, caseSensitivity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoFilefilterSuffixFileFilter)
