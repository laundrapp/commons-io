//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/NotFileFilter.java
//

#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/io/filefilter/AbstractFileFilter.h"
#include "org/apache/commons/io/filefilter/IOFileFilter.h"
#include "org/apache/commons/io/filefilter/NotFileFilter.h"

@interface OrgApacheCommonsIoFilefilterNotFileFilter () {
 @public
  /*!
   @brief The filter
   */
  id<OrgApacheCommonsIoFilefilterIOFileFilter> filter_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsIoFilefilterNotFileFilter, filter_, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

@implementation OrgApacheCommonsIoFilefilterNotFileFilter

- (instancetype)initWithOrgApacheCommonsIoFilefilterIOFileFilter:(id<OrgApacheCommonsIoFilefilterIOFileFilter>)filter {
  OrgApacheCommonsIoFilefilterNotFileFilter_initWithOrgApacheCommonsIoFilefilterIOFileFilter_(self, filter);
  return self;
}

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file {
  return ![((id<OrgApacheCommonsIoFilefilterIOFileFilter>) nil_chk(filter_)) acceptWithJavaIoFile:file];
}

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file
                    withNSString:(NSString *)name {
  return ![((id<OrgApacheCommonsIoFilefilterIOFileFilter>) nil_chk(filter_)) acceptWithJavaIoFile:file withNSString:name];
}

- (NSString *)description {
  return JreStrcat("$C$C", [super description], '(', [((id<OrgApacheCommonsIoFilefilterIOFileFilter>) nil_chk(filter_)) description], ')');
}

- (void)dealloc {
  RELEASE_(filter_);
  [super dealloc];
}

@end

void OrgApacheCommonsIoFilefilterNotFileFilter_initWithOrgApacheCommonsIoFilefilterIOFileFilter_(OrgApacheCommonsIoFilefilterNotFileFilter *self, id<OrgApacheCommonsIoFilefilterIOFileFilter> filter) {
  OrgApacheCommonsIoFilefilterAbstractFileFilter_init(self);
  if (filter == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The filter must not be null");
  }
  JreStrongAssign(&self->filter_, filter);
}

OrgApacheCommonsIoFilefilterNotFileFilter *new_OrgApacheCommonsIoFilefilterNotFileFilter_initWithOrgApacheCommonsIoFilefilterIOFileFilter_(id<OrgApacheCommonsIoFilefilterIOFileFilter> filter) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoFilefilterNotFileFilter, initWithOrgApacheCommonsIoFilefilterIOFileFilter_, filter)
}

OrgApacheCommonsIoFilefilterNotFileFilter *create_OrgApacheCommonsIoFilefilterNotFileFilter_initWithOrgApacheCommonsIoFilefilterIOFileFilter_(id<OrgApacheCommonsIoFilefilterIOFileFilter> filter) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoFilefilterNotFileFilter, initWithOrgApacheCommonsIoFilefilterIOFileFilter_, filter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoFilefilterNotFileFilter)
