//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/SizeFileFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterSizeFileFilter")
#ifdef RESTRICT_OrgApacheCommonsIoFilefilterSizeFileFilter
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterSizeFileFilter 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterSizeFileFilter 1
#endif
#undef RESTRICT_OrgApacheCommonsIoFilefilterSizeFileFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoFilefilterSizeFileFilter_) && (INCLUDE_ALL_OrgApacheCommonsIoFilefilterSizeFileFilter || defined(INCLUDE_OrgApacheCommonsIoFilefilterSizeFileFilter))
#define OrgApacheCommonsIoFilefilterSizeFileFilter_

#define RESTRICT_OrgApacheCommonsIoFilefilterAbstractFileFilter 1
#define INCLUDE_OrgApacheCommonsIoFilefilterAbstractFileFilter 1
#include "org/apache/commons/io/filefilter/AbstractFileFilter.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;

/*!
 @brief Filters files based on size, can filter either smaller files or
  files equal to or larger than a given threshold.
 <p>
  For example, to print all files and directories in the
  current directory whose size is greater than 1 MB: 
 @code

  File dir = new File(".");
  String[] files = dir.list( new SizeFileFilter(1024 * 1024) );
  for ( int i = 0; i &lt; files.length; i++ ) {
      System.out.println(files[i]);
  } 
  
@endcode
 @version $Id$
 @since 1.2
 - seealso: FileFilterUtils#sizeFileFilter(long)
 - seealso: FileFilterUtils#sizeFileFilter(long, boolean)
 - seealso: FileFilterUtils#sizeRangeFileFilter(long, long)
 */
@interface OrgApacheCommonsIoFilefilterSizeFileFilter : OrgApacheCommonsIoFilefilterAbstractFileFilter < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Constructs a new size file filter for files equal to or 
  larger than a certain size.
 @param size the threshold size of the files
 @throw IllegalArgumentExceptionif the size is negative
 */
- (instancetype __nonnull)initWithLong:(jlong)size;

/*!
 @brief Constructs a new size file filter for files based on a certain size
  threshold.
 @param size the threshold size of the files
 @param acceptLarger if true, files equal to or larger are accepted,  otherwise smaller ones (but not equal to)
 @throw IllegalArgumentExceptionif the size is negative
 */
- (instancetype __nonnull)initWithLong:(jlong)size
                           withBoolean:(jboolean)acceptLarger;

/*!
 @brief Checks to see if the size of the file is favorable.
 <p>
  If size equals threshold and smaller files are required,
  file <b>IS NOT</b> selected.
  If size equals threshold and larger files are required,
  file <b>IS</b> selected.
 @param file the File to check
 @return true if the filename matches
 */
- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file;

/*!
 @brief Provide a String representaion of this file filter.
 @return a String representaion
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoFilefilterSizeFileFilter)

FOUNDATION_EXPORT void OrgApacheCommonsIoFilefilterSizeFileFilter_initWithLong_(OrgApacheCommonsIoFilefilterSizeFileFilter *self, jlong size);

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterSizeFileFilter *new_OrgApacheCommonsIoFilefilterSizeFileFilter_initWithLong_(jlong size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterSizeFileFilter *create_OrgApacheCommonsIoFilefilterSizeFileFilter_initWithLong_(jlong size);

FOUNDATION_EXPORT void OrgApacheCommonsIoFilefilterSizeFileFilter_initWithLong_withBoolean_(OrgApacheCommonsIoFilefilterSizeFileFilter *self, jlong size, jboolean acceptLarger);

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterSizeFileFilter *new_OrgApacheCommonsIoFilefilterSizeFileFilter_initWithLong_withBoolean_(jlong size, jboolean acceptLarger) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterSizeFileFilter *create_OrgApacheCommonsIoFilefilterSizeFileFilter_initWithLong_withBoolean_(jlong size, jboolean acceptLarger);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoFilefilterSizeFileFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterSizeFileFilter")
