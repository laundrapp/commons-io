//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/CanWriteFileFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterCanWriteFileFilter")
#ifdef RESTRICT_OrgApacheCommonsIoFilefilterCanWriteFileFilter
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterCanWriteFileFilter 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterCanWriteFileFilter 1
#endif
#undef RESTRICT_OrgApacheCommonsIoFilefilterCanWriteFileFilter

#if !defined (OrgApacheCommonsIoFilefilterCanWriteFileFilter_) && (INCLUDE_ALL_OrgApacheCommonsIoFilefilterCanWriteFileFilter || defined(INCLUDE_OrgApacheCommonsIoFilefilterCanWriteFileFilter))
#define OrgApacheCommonsIoFilefilterCanWriteFileFilter_

#define RESTRICT_OrgApacheCommonsIoFilefilterAbstractFileFilter 1
#define INCLUDE_OrgApacheCommonsIoFilefilterAbstractFileFilter 1
#include "org/apache/commons/io/filefilter/AbstractFileFilter.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;
@protocol OrgApacheCommonsIoFilefilterIOFileFilter;

/*!
 @brief This filter accepts <code>File</code>s that can be written to.
 <p>
  Example, showing how to print out a list of the
  current directory's <i>writable</i> files: 
 @code

  File dir = new File(".");
  String[] files = dir.list( CanWriteFileFilter.CAN_WRITE );
  for ( int i = 0; i &lt; files.length; i++ ) {
      System.out.println(files[i]);
  } 
  
@endcode
  
 <p>
  Example, showing how to print out a list of the
  current directory's <i>un-writable</i> files: 
 @code

  File dir = new File(".");
  String[] files = dir.list( CanWriteFileFilter.CANNOT_WRITE );
  for ( int i = 0; i &lt; files.length; i++ ) {
      System.out.println(files[i]);
  } 
  
@endcode
  
 <p>
  <b>N.B.</b> For read-only files, use 
     <code>CanReadFileFilter.READ_ONLY</code>.
 @since 1.3
 @version $Id$
 */
@interface OrgApacheCommonsIoFilefilterCanWriteFileFilter : OrgApacheCommonsIoFilefilterAbstractFileFilter < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Checks to see if the file can be written to.
 @param file the File to check
 @return <code>true</code> if the file can be
   written to, otherwise <code>false</code>.
 */
- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file;

#pragma mark Protected

/*!
 @brief Restrictive consructor.
 */
- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoFilefilterCanWriteFileFilter)

/*!
 @brief Singleton instance of <i>writable</i> filter
 */
inline id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanWriteFileFilter_get_CAN_WRITE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanWriteFileFilter_CAN_WRITE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoFilefilterCanWriteFileFilter, CAN_WRITE, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

/*!
 @brief Singleton instance of not <i>writable</i> filter
 */
inline id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanWriteFileFilter_get_CANNOT_WRITE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterCanWriteFileFilter_CANNOT_WRITE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoFilefilterCanWriteFileFilter, CANNOT_WRITE, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

FOUNDATION_EXPORT void OrgApacheCommonsIoFilefilterCanWriteFileFilter_init(OrgApacheCommonsIoFilefilterCanWriteFileFilter *self);

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterCanWriteFileFilter *new_OrgApacheCommonsIoFilefilterCanWriteFileFilter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterCanWriteFileFilter *create_OrgApacheCommonsIoFilefilterCanWriteFileFilter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoFilefilterCanWriteFileFilter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterCanWriteFileFilter")
