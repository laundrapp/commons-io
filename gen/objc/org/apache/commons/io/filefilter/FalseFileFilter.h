//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/filefilter/FalseFileFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterFalseFileFilter")
#ifdef RESTRICT_OrgApacheCommonsIoFilefilterFalseFileFilter
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterFalseFileFilter 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoFilefilterFalseFileFilter 1
#endif
#undef RESTRICT_OrgApacheCommonsIoFilefilterFalseFileFilter

#if !defined (OrgApacheCommonsIoFilefilterFalseFileFilter_) && (INCLUDE_ALL_OrgApacheCommonsIoFilefilterFalseFileFilter || defined(INCLUDE_OrgApacheCommonsIoFilefilterFalseFileFilter))
#define OrgApacheCommonsIoFilefilterFalseFileFilter_

#define RESTRICT_OrgApacheCommonsIoFilefilterIOFileFilter 1
#define INCLUDE_OrgApacheCommonsIoFilefilterIOFileFilter 1
#include "org/apache/commons/io/filefilter/IOFileFilter.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaIoFile;

/*!
 @brief A file filter that always returns false.
 @since 1.0
 @version $Id$
 - seealso: FileFilterUtils#falseFileFilter()
 */
@interface OrgApacheCommonsIoFilefilterFalseFileFilter : NSObject < OrgApacheCommonsIoFilefilterIOFileFilter, JavaIoSerializable >

#pragma mark Public

/*!
 @brief Returns false.
 @param file the file to check (ignored)
 @return false
 */
- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)file;

/*!
 @brief Returns false.
 @param dir the directory to check (ignored)
 @param name the filename (ignored)
 @return false
 */
- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name;

#pragma mark Protected

/*!
 @brief Restrictive consructor.
 */
- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgApacheCommonsIoFilefilterFalseFileFilter)

/*!
 @brief Singleton instance of false filter.
 @since 1.3
 */
inline id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterFalseFileFilter_get_FALSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterFalseFileFilter_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoFilefilterFalseFileFilter, FALSE, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

/*!
 @brief Singleton instance of false filter.
 Please use the identical FalseFileFilter.FALSE constant.
  The new name is more JDK 1.5 friendly as it doesn't clash with other
  values when using static imports.
 */
inline id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterFalseFileFilter_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<OrgApacheCommonsIoFilefilterIOFileFilter> OrgApacheCommonsIoFilefilterFalseFileFilter_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoFilefilterFalseFileFilter, INSTANCE, id<OrgApacheCommonsIoFilefilterIOFileFilter>)

FOUNDATION_EXPORT void OrgApacheCommonsIoFilefilterFalseFileFilter_init(OrgApacheCommonsIoFilefilterFalseFileFilter *self);

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterFalseFileFilter *new_OrgApacheCommonsIoFilefilterFalseFileFilter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFilefilterFalseFileFilter *create_OrgApacheCommonsIoFilefilterFalseFileFilter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoFilefilterFalseFileFilter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoFilefilterFalseFileFilter")
