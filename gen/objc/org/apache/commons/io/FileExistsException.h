//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/FileExistsException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoFileExistsException")
#ifdef RESTRICT_OrgApacheCommonsIoFileExistsException
#define INCLUDE_ALL_OrgApacheCommonsIoFileExistsException 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoFileExistsException 1
#endif
#undef RESTRICT_OrgApacheCommonsIoFileExistsException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoFileExistsException_) && (INCLUDE_ALL_OrgApacheCommonsIoFileExistsException || defined(INCLUDE_OrgApacheCommonsIoFileExistsException))
#define OrgApacheCommonsIoFileExistsException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaIoFile;
@class JavaLangThrowable;

/*!
 @brief Indicates that a file already exists.
 @version $Id$
 @since 2.0
 */
@interface OrgApacheCommonsIoFileExistsException : JavaIoIOException

#pragma mark Public

/*!
 @brief Default Constructor.
 */
- (instancetype __nonnull)init;

/*!
 @brief Construct an instance with the specified file.
 @param file The file that exists
 */
- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file;

/*!
 @brief Construct an instance with the specified message.
 @param message The error message
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoFileExistsException)

FOUNDATION_EXPORT void OrgApacheCommonsIoFileExistsException_init(OrgApacheCommonsIoFileExistsException *self);

FOUNDATION_EXPORT OrgApacheCommonsIoFileExistsException *new_OrgApacheCommonsIoFileExistsException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFileExistsException *create_OrgApacheCommonsIoFileExistsException_init(void);

FOUNDATION_EXPORT void OrgApacheCommonsIoFileExistsException_initWithNSString_(OrgApacheCommonsIoFileExistsException *self, NSString *message);

FOUNDATION_EXPORT OrgApacheCommonsIoFileExistsException *new_OrgApacheCommonsIoFileExistsException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFileExistsException *create_OrgApacheCommonsIoFileExistsException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void OrgApacheCommonsIoFileExistsException_initWithJavaIoFile_(OrgApacheCommonsIoFileExistsException *self, JavaIoFile *file);

FOUNDATION_EXPORT OrgApacheCommonsIoFileExistsException *new_OrgApacheCommonsIoFileExistsException_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoFileExistsException *create_OrgApacheCommonsIoFileExistsException_initWithJavaIoFile_(JavaIoFile *file);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoFileExistsException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoFileExistsException")
