//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/InputStream.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/commons/io/EndianUtils.h"
#include "org/apache/commons/io/input/ProxyInputStream.h"
#include "org/apache/commons/io/input/SwappedDataInputStream.h"

@implementation OrgApacheCommonsIoInputSwappedDataInputStream

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)input {
  OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(self, input);
  return self;
}

- (jboolean)readBoolean {
  return 0 != [self readByte];
}

- (jbyte)readByte {
  return (jbyte) [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) read];
}

- (jchar)readChar {
  return (jchar) [self readShort];
}

- (jdouble)readDouble {
  return OrgApacheCommonsIoEndianUtils_readSwappedDoubleWithJavaIoInputStream_(JreLoadVolatileId(&in_));
}

- (jfloat)readFloat {
  return OrgApacheCommonsIoEndianUtils_readSwappedFloatWithJavaIoInputStream_(JreLoadVolatileId(&in_));
}

- (void)readFullyWithByteArray:(IOSByteArray *)data {
  [self readFullyWithByteArray:data withInt:0 withInt:((IOSByteArray *) nil_chk(data))->size_];
}

- (void)readFullyWithByteArray:(IOSByteArray *)data
                       withInt:(jint)offset
                       withInt:(jint)length {
  jint remaining = length;
  while (remaining > 0) {
    jint location = offset + length - remaining;
    jint count = [self readWithByteArray:data withInt:location withInt:remaining];
    if (-1 == count) {
      @throw create_JavaIoEOFException_init();
    }
    remaining -= count;
  }
}

- (jint)readInt {
  return OrgApacheCommonsIoEndianUtils_readSwappedIntegerWithJavaIoInputStream_(JreLoadVolatileId(&in_));
}

- (NSString *)readLine {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Operation not supported: readLine()");
}

- (jlong)readLong {
  return OrgApacheCommonsIoEndianUtils_readSwappedLongWithJavaIoInputStream_(JreLoadVolatileId(&in_));
}

- (jshort)readShort {
  return OrgApacheCommonsIoEndianUtils_readSwappedShortWithJavaIoInputStream_(JreLoadVolatileId(&in_));
}

- (jint)readUnsignedByte {
  return [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) read];
}

- (jint)readUnsignedShort {
  return OrgApacheCommonsIoEndianUtils_readSwappedUnsignedShortWithJavaIoInputStream_(JreLoadVolatileId(&in_));
}

- (NSString *)readUTF {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Operation not supported: readUTF()");
}

- (jint)skipBytesWithInt:(jint)count {
  return (jint) [((JavaIoInputStream *) nil_chk(JreLoadVolatileId(&in_))) skipWithLong:count];
}

@end

void OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(OrgApacheCommonsIoInputSwappedDataInputStream *self, JavaIoInputStream *input) {
  OrgApacheCommonsIoInputProxyInputStream_initWithJavaIoInputStream_(self, input);
}

OrgApacheCommonsIoInputSwappedDataInputStream *new_OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(JavaIoInputStream *input) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputSwappedDataInputStream, initWithJavaIoInputStream_, input)
}

OrgApacheCommonsIoInputSwappedDataInputStream *create_OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(JavaIoInputStream *input) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputSwappedDataInputStream, initWithJavaIoInputStream_, input)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoInputSwappedDataInputStream)
