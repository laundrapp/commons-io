//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/input/XmlStreamReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/BufferedReader.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/StringBuffer.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/text/MessageFormat.h"
#include "java/util/Locale.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/apache/commons/io/ByteOrderMark.h"
#include "org/apache/commons/io/input/BOMInputStream.h"
#include "org/apache/commons/io/input/XmlStreamReader.h"
#include "org/apache/commons/io/input/XmlStreamReaderException.h"

@interface OrgApacheCommonsIoInputXmlStreamReader () {
 @public
  JavaIoReader *reader_;
  NSString *encoding_;
  NSString *defaultEncoding_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsIoInputXmlStreamReader, reader_, JavaIoReader *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsIoInputXmlStreamReader, encoding_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsIoInputXmlStreamReader, defaultEncoding_, NSString *)

inline jint OrgApacheCommonsIoInputXmlStreamReader_get_BUFFER_SIZE(void);
#define OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE 4096
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsIoInputXmlStreamReader, BUFFER_SIZE, jint)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_8(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_8 = @"UTF-8";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_8, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_US_ASCII(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_US_ASCII = @"US-ASCII";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, US_ASCII, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_16BE(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_16BE = @"UTF-16BE";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_16BE, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_16LE(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_16LE = @"UTF-16LE";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_16LE, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_32BE(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_32BE = @"UTF-32BE";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_32BE, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_32LE(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_32LE = @"UTF-32LE";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_32LE, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_16(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_16 = @"UTF-16";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_16, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_UTF_32(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_UTF_32 = @"UTF-32";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, UTF_32, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_EBCDIC(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_EBCDIC = @"CP1047";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, EBCDIC, NSString *)

inline IOSObjectArray *OrgApacheCommonsIoInputXmlStreamReader_get_BOMS(void);
static IOSObjectArray *OrgApacheCommonsIoInputXmlStreamReader_BOMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, BOMS, IOSObjectArray *)

inline IOSObjectArray *OrgApacheCommonsIoInputXmlStreamReader_get_XML_GUESS_BYTES(void);
static IOSObjectArray *OrgApacheCommonsIoInputXmlStreamReader_XML_GUESS_BYTES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, XML_GUESS_BYTES, IOSObjectArray *)

inline JavaUtilRegexPattern *OrgApacheCommonsIoInputXmlStreamReader_get_CHARSET_PATTERN(void);
static JavaUtilRegexPattern *OrgApacheCommonsIoInputXmlStreamReader_CHARSET_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, CHARSET_PATTERN, JavaUtilRegexPattern *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_RAW_EX_1(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1 = @"Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, RAW_EX_1, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_RAW_EX_2(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_2 = @"Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, RAW_EX_2, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_HTTP_EX_1(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_1 = @"Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, HTTP_EX_1, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_HTTP_EX_2(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_2 = @"Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, HTTP_EX_2, NSString *)

inline NSString *OrgApacheCommonsIoInputXmlStreamReader_get_HTTP_EX_3(void);
static NSString *OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_3 = @"Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsIoInputXmlStreamReader, HTTP_EX_3, NSString *)

__attribute__((unused)) static NSString *OrgApacheCommonsIoInputXmlStreamReader_doRawStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withBoolean_(OrgApacheCommonsIoInputXmlStreamReader *self, OrgApacheCommonsIoInputBOMInputStream *bom, OrgApacheCommonsIoInputBOMInputStream *pis, jboolean lenient);

__attribute__((unused)) static NSString *OrgApacheCommonsIoInputXmlStreamReader_doHttpStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withNSString_withBoolean_(OrgApacheCommonsIoInputXmlStreamReader *self, OrgApacheCommonsIoInputBOMInputStream *bom, OrgApacheCommonsIoInputBOMInputStream *pis, NSString *httpContentType, jboolean lenient);

__attribute__((unused)) static NSString *OrgApacheCommonsIoInputXmlStreamReader_doLenientDetectionWithNSString_withOrgApacheCommonsIoInputXmlStreamReaderException_(OrgApacheCommonsIoInputXmlStreamReader *self, NSString *httpContentType, OrgApacheCommonsIoInputXmlStreamReaderException *ex);

__attribute__((unused)) static NSString *OrgApacheCommonsIoInputXmlStreamReader_getXmlPrologWithJavaIoInputStream_withNSString_(JavaIoInputStream *is, NSString *guessedEnc);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsIoInputXmlStreamReader)

JavaUtilRegexPattern *OrgApacheCommonsIoInputXmlStreamReader_ENCODING_PATTERN;

@implementation OrgApacheCommonsIoInputXmlStreamReader

- (NSString *)getDefaultEncoding {
  return defaultEncoding_;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoFile_(self, file);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_(self, is);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
                              withBoolean:(jboolean)lenient {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_(self, is, lenient);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
                              withBoolean:(jboolean)lenient
                             withNSString:(NSString *)defaultEncoding {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_withNSString_(self, is, lenient, defaultEncoding);
  return self;
}

- (instancetype)initWithJavaNetURL:(JavaNetURL *)url {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURL_(self, url);
  return self;
}

- (instancetype)initWithJavaNetURLConnection:(JavaNetURLConnection *)conn
                                withNSString:(NSString *)defaultEncoding {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURLConnection_withNSString_(self, conn, defaultEncoding);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
                             withNSString:(NSString *)httpContentType {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_(self, is, httpContentType);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
                             withNSString:(NSString *)httpContentType
                              withBoolean:(jboolean)lenient
                             withNSString:(NSString *)defaultEncoding {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_withNSString_(self, is, httpContentType, lenient, defaultEncoding);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is
                             withNSString:(NSString *)httpContentType
                              withBoolean:(jboolean)lenient {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_(self, is, httpContentType, lenient);
  return self;
}

- (NSString *)getEncoding {
  return encoding_;
}

- (jint)readWithCharArray:(IOSCharArray *)buf
                  withInt:(jint)offset
                  withInt:(jint)len {
  return [((JavaIoReader *) nil_chk(reader_)) readWithCharArray:buf withInt:offset withInt:len];
}

- (void)close {
  [((JavaIoReader *) nil_chk(reader_)) close];
}

- (NSString *)calculateRawEncodingWithNSString:(NSString *)bomEnc
                                  withNSString:(NSString *)xmlGuessEnc
                                  withNSString:(NSString *)xmlEnc {
  if (bomEnc == nil) {
    if (xmlGuessEnc == nil || xmlEnc == nil) {
      return defaultEncoding_ == nil ? OrgApacheCommonsIoInputXmlStreamReader_UTF_8 : defaultEncoding_;
    }
    if ([xmlEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16] && ([xmlGuessEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16BE] || [xmlGuessEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16LE])) {
      return xmlGuessEnc;
    }
    return xmlEnc;
  }
  if ([bomEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_8]) {
    if (xmlGuessEnc != nil && ![xmlGuessEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_8]) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
    }
    if (xmlEnc != nil && ![xmlEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_8]) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
    }
    return bomEnc;
  }
  if ([bomEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16BE] || [bomEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16LE]) {
    if (xmlGuessEnc != nil && ![xmlGuessEnc isEqual:bomEnc]) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
    }
    if (xmlEnc != nil && ![xmlEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16] && ![xmlEnc isEqual:bomEnc]) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
    }
    return bomEnc;
  }
  if ([bomEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_32BE] || [bomEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_32LE]) {
    if (xmlGuessEnc != nil && ![xmlGuessEnc isEqual:bomEnc]) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
    }
    if (xmlEnc != nil && ![xmlEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_32] && ![xmlEnc isEqual:bomEnc]) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
    }
    return bomEnc;
  }
  NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_RAW_EX_2, [IOSObjectArray arrayWithObjects:(id[]){ bomEnc, xmlGuessEnc, xmlEnc } count:3 type:NSObject_class_()]);
  @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_(msg, bomEnc, xmlGuessEnc, xmlEnc);
}

- (NSString *)calculateHttpEncodingWithNSString:(NSString *)httpContentType
                                   withNSString:(NSString *)bomEnc
                                   withNSString:(NSString *)xmlGuessEnc
                                   withNSString:(NSString *)xmlEnc
                                    withBoolean:(jboolean)lenient {
  if (lenient && xmlEnc != nil) {
    return xmlEnc;
  }
  NSString *cTMime = OrgApacheCommonsIoInputXmlStreamReader_getContentTypeMimeWithNSString_(httpContentType);
  NSString *cTEnc = OrgApacheCommonsIoInputXmlStreamReader_getContentTypeEncodingWithNSString_(httpContentType);
  jboolean appXml = OrgApacheCommonsIoInputXmlStreamReader_isAppXmlWithNSString_(cTMime);
  jboolean textXml = OrgApacheCommonsIoInputXmlStreamReader_isTextXmlWithNSString_(cTMime);
  if (!appXml && !textXml) {
    NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_3, [IOSObjectArray arrayWithObjects:(id[]){ cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc } count:5 type:NSObject_class_()]);
    @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);
  }
  if (cTEnc == nil) {
    if (appXml) {
      return [self calculateRawEncodingWithNSString:bomEnc withNSString:xmlGuessEnc withNSString:xmlEnc];
    }
    else {
      return defaultEncoding_ == nil ? OrgApacheCommonsIoInputXmlStreamReader_US_ASCII : defaultEncoding_;
    }
  }
  if ([cTEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16BE] || [cTEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16LE]) {
    if (bomEnc != nil) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc } count:5 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);
    }
    return cTEnc;
  }
  if ([cTEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_16]) {
    if (bomEnc != nil && [bomEnc java_hasPrefix:OrgApacheCommonsIoInputXmlStreamReader_UTF_16]) {
      return bomEnc;
    }
    NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_2, [IOSObjectArray arrayWithObjects:(id[]){ cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc } count:5 type:NSObject_class_()]);
    @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);
  }
  if ([cTEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_32BE] || [cTEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_32LE]) {
    if (bomEnc != nil) {
      NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_1, [IOSObjectArray arrayWithObjects:(id[]){ cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc } count:5 type:NSObject_class_()]);
      @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);
    }
    return cTEnc;
  }
  if ([cTEnc isEqual:OrgApacheCommonsIoInputXmlStreamReader_UTF_32]) {
    if (bomEnc != nil && [bomEnc java_hasPrefix:OrgApacheCommonsIoInputXmlStreamReader_UTF_32]) {
      return bomEnc;
    }
    NSString *msg = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(OrgApacheCommonsIoInputXmlStreamReader_HTTP_EX_2, [IOSObjectArray arrayWithObjects:(id[]){ cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc } count:5 type:NSObject_class_()]);
    @throw create_OrgApacheCommonsIoInputXmlStreamReaderException_initWithNSString_withNSString_withNSString_withNSString_withNSString_withNSString_(msg, cTMime, cTEnc, bomEnc, xmlGuessEnc, xmlEnc);
  }
  return cTEnc;
}

+ (NSString *)getContentTypeMimeWithNSString:(NSString *)httpContentType {
  return OrgApacheCommonsIoInputXmlStreamReader_getContentTypeMimeWithNSString_(httpContentType);
}

+ (NSString *)getContentTypeEncodingWithNSString:(NSString *)httpContentType {
  return OrgApacheCommonsIoInputXmlStreamReader_getContentTypeEncodingWithNSString_(httpContentType);
}

+ (jboolean)isAppXmlWithNSString:(NSString *)mime {
  return OrgApacheCommonsIoInputXmlStreamReader_isAppXmlWithNSString_(mime);
}

+ (jboolean)isTextXmlWithNSString:(NSString *)mime {
  return OrgApacheCommonsIoInputXmlStreamReader_isTextXmlWithNSString_(mime);
}

- (void)dealloc {
  RELEASE_(reader_);
  RELEASE_(encoding_);
  RELEASE_(defaultEncoding_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [OrgApacheCommonsIoInputXmlStreamReader class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsIoInputXmlStreamReader_BOMS, [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(OrgApacheCommonsIoByteOrderMark, UTF_8), JreLoadStatic(OrgApacheCommonsIoByteOrderMark, UTF_16BE), JreLoadStatic(OrgApacheCommonsIoByteOrderMark, UTF_16LE), JreLoadStatic(OrgApacheCommonsIoByteOrderMark, UTF_32BE), JreLoadStatic(OrgApacheCommonsIoByteOrderMark, UTF_32LE) } count:5 type:OrgApacheCommonsIoByteOrderMark_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsIoInputXmlStreamReader_XML_GUESS_BYTES, [IOSObjectArray newArrayWithObjects:(id[]){ create_OrgApacheCommonsIoByteOrderMark_initWithNSString_withIntArray_(OrgApacheCommonsIoInputXmlStreamReader_UTF_8, [IOSIntArray arrayWithInts:(jint[]){ (jint) 0x3C, (jint) 0x3F, (jint) 0x78, (jint) 0x6D } count:4]), create_OrgApacheCommonsIoByteOrderMark_initWithNSString_withIntArray_(OrgApacheCommonsIoInputXmlStreamReader_UTF_16BE, [IOSIntArray arrayWithInts:(jint[]){ (jint) 0x00, (jint) 0x3C, (jint) 0x00, (jint) 0x3F } count:4]), create_OrgApacheCommonsIoByteOrderMark_initWithNSString_withIntArray_(OrgApacheCommonsIoInputXmlStreamReader_UTF_16LE, [IOSIntArray arrayWithInts:(jint[]){ (jint) 0x3C, (jint) 0x00, (jint) 0x3F, (jint) 0x00 } count:4]), create_OrgApacheCommonsIoByteOrderMark_initWithNSString_withIntArray_(OrgApacheCommonsIoInputXmlStreamReader_UTF_32BE, [IOSIntArray arrayWithInts:(jint[]){ (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x3C, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x3F, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x78, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x6D } count:16]), create_OrgApacheCommonsIoByteOrderMark_initWithNSString_withIntArray_(OrgApacheCommonsIoInputXmlStreamReader_UTF_32LE, [IOSIntArray arrayWithInts:(jint[]){ (jint) 0x3C, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x3F, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x78, (jint) 0x00, (jint) 0x00, (jint) 0x00, (jint) 0x6D, (jint) 0x00, (jint) 0x00, (jint) 0x00 } count:16]), create_OrgApacheCommonsIoByteOrderMark_initWithNSString_withIntArray_(OrgApacheCommonsIoInputXmlStreamReader_EBCDIC, [IOSIntArray arrayWithInts:(jint[]){ (jint) 0x4C, (jint) 0x6F, (jint) 0xA7, (jint) 0x94 } count:4]) } count:6 type:OrgApacheCommonsIoByteOrderMark_class_()]);
    JreStrongAssign(&OrgApacheCommonsIoInputXmlStreamReader_CHARSET_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"charset=[\"']?([.[^; \"']]*)[\"']?"));
    JreStrongAssign(&OrgApacheCommonsIoInputXmlStreamReader_ENCODING_PATTERN, JavaUtilRegexPattern_compileWithNSString_withInt_(@"<\\?xml.*encoding[\\s]*=[\\s]*((?:\".[^\"]*\")|(?:'.[^']*'))", JavaUtilRegexPattern_MULTILINE));
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsIoInputXmlStreamReader)
  }
}

@end

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoFile_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoFile *file) {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_(self, create_JavaIoFileInputStream_initWithJavaIoFile_(file));
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoFile_, file)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoFile_, file)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoInputStream *is) {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_(self, is, true);
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_, is)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_, is)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoInputStream *is, jboolean lenient) {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_withNSString_(self, is, lenient, nil);
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *is, jboolean lenient) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withBoolean_, is, lenient)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *is, jboolean lenient) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withBoolean_, is, lenient)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_withNSString_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoInputStream *is, jboolean lenient, NSString *defaultEncoding) {
  JavaIoReader_init(self);
  JreStrongAssign(&self->defaultEncoding_, defaultEncoding);
  OrgApacheCommonsIoInputBOMInputStream *bom = create_OrgApacheCommonsIoInputBOMInputStream_initWithJavaIoInputStream_withBoolean_withOrgApacheCommonsIoByteOrderMarkArray_(create_JavaIoBufferedInputStream_initWithJavaIoInputStream_withInt_(is, OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE), false, OrgApacheCommonsIoInputXmlStreamReader_BOMS);
  OrgApacheCommonsIoInputBOMInputStream *pis = create_OrgApacheCommonsIoInputBOMInputStream_initWithJavaIoInputStream_withBoolean_withOrgApacheCommonsIoByteOrderMarkArray_(bom, true, OrgApacheCommonsIoInputXmlStreamReader_XML_GUESS_BYTES);
  JreStrongAssign(&self->encoding_, OrgApacheCommonsIoInputXmlStreamReader_doRawStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withBoolean_(self, bom, pis, lenient));
  JreStrongAssignAndConsume(&self->reader_, new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(pis, self->encoding_));
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_withNSString_(JavaIoInputStream *is, jboolean lenient, NSString *defaultEncoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withBoolean_withNSString_, is, lenient, defaultEncoding)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withBoolean_withNSString_(JavaIoInputStream *is, jboolean lenient, NSString *defaultEncoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withBoolean_withNSString_, is, lenient, defaultEncoding)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURL_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaNetURL *url) {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURLConnection_withNSString_(self, [((JavaNetURL *) nil_chk(url)) openConnection], nil);
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaNetURL_, url)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaNetURL_, url)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURLConnection_withNSString_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaNetURLConnection *conn, NSString *defaultEncoding) {
  JavaIoReader_init(self);
  JreStrongAssign(&self->defaultEncoding_, defaultEncoding);
  jboolean lenient = true;
  NSString *contentType = [((JavaNetURLConnection *) nil_chk(conn)) getContentType];
  JavaIoInputStream *is = [conn getInputStream];
  OrgApacheCommonsIoInputBOMInputStream *bom = create_OrgApacheCommonsIoInputBOMInputStream_initWithJavaIoInputStream_withBoolean_withOrgApacheCommonsIoByteOrderMarkArray_(create_JavaIoBufferedInputStream_initWithJavaIoInputStream_withInt_(is, OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE), false, OrgApacheCommonsIoInputXmlStreamReader_BOMS);
  OrgApacheCommonsIoInputBOMInputStream *pis = create_OrgApacheCommonsIoInputBOMInputStream_initWithJavaIoInputStream_withBoolean_withOrgApacheCommonsIoByteOrderMarkArray_(bom, true, OrgApacheCommonsIoInputXmlStreamReader_XML_GUESS_BYTES);
  if ([conn isKindOfClass:[JavaNetHttpURLConnection class]] || contentType != nil) {
    JreStrongAssign(&self->encoding_, OrgApacheCommonsIoInputXmlStreamReader_doHttpStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withNSString_withBoolean_(self, bom, pis, contentType, lenient));
  }
  else {
    JreStrongAssign(&self->encoding_, OrgApacheCommonsIoInputXmlStreamReader_doRawStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withBoolean_(self, bom, pis, lenient));
  }
  JreStrongAssignAndConsume(&self->reader_, new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(pis, self->encoding_));
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURLConnection_withNSString_(JavaNetURLConnection *conn, NSString *defaultEncoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaNetURLConnection_withNSString_, conn, defaultEncoding)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaNetURLConnection_withNSString_(JavaNetURLConnection *conn, NSString *defaultEncoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaNetURLConnection_withNSString_, conn, defaultEncoding)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoInputStream *is, NSString *httpContentType) {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_(self, is, httpContentType, true);
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *is, NSString *httpContentType) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withNSString_, is, httpContentType)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *is, NSString *httpContentType) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withNSString_, is, httpContentType)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_withNSString_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoInputStream *is, NSString *httpContentType, jboolean lenient, NSString *defaultEncoding) {
  JavaIoReader_init(self);
  JreStrongAssign(&self->defaultEncoding_, defaultEncoding);
  OrgApacheCommonsIoInputBOMInputStream *bom = create_OrgApacheCommonsIoInputBOMInputStream_initWithJavaIoInputStream_withBoolean_withOrgApacheCommonsIoByteOrderMarkArray_(create_JavaIoBufferedInputStream_initWithJavaIoInputStream_withInt_(is, OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE), false, OrgApacheCommonsIoInputXmlStreamReader_BOMS);
  OrgApacheCommonsIoInputBOMInputStream *pis = create_OrgApacheCommonsIoInputBOMInputStream_initWithJavaIoInputStream_withBoolean_withOrgApacheCommonsIoByteOrderMarkArray_(bom, true, OrgApacheCommonsIoInputXmlStreamReader_XML_GUESS_BYTES);
  JreStrongAssign(&self->encoding_, OrgApacheCommonsIoInputXmlStreamReader_doHttpStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withNSString_withBoolean_(self, bom, pis, httpContentType, lenient));
  JreStrongAssignAndConsume(&self->reader_, new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(pis, self->encoding_));
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_withNSString_(JavaIoInputStream *is, NSString *httpContentType, jboolean lenient, NSString *defaultEncoding) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withNSString_withBoolean_withNSString_, is, httpContentType, lenient, defaultEncoding)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_withNSString_(JavaIoInputStream *is, NSString *httpContentType, jboolean lenient, NSString *defaultEncoding) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withNSString_withBoolean_withNSString_, is, httpContentType, lenient, defaultEncoding)
}

void OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_(OrgApacheCommonsIoInputXmlStreamReader *self, JavaIoInputStream *is, NSString *httpContentType, jboolean lenient) {
  OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_withNSString_(self, is, httpContentType, lenient, nil);
}

OrgApacheCommonsIoInputXmlStreamReader *new_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_(JavaIoInputStream *is, NSString *httpContentType, jboolean lenient) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withNSString_withBoolean_, is, httpContentType, lenient)
}

OrgApacheCommonsIoInputXmlStreamReader *create_OrgApacheCommonsIoInputXmlStreamReader_initWithJavaIoInputStream_withNSString_withBoolean_(JavaIoInputStream *is, NSString *httpContentType, jboolean lenient) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsIoInputXmlStreamReader, initWithJavaIoInputStream_withNSString_withBoolean_, is, httpContentType, lenient)
}

NSString *OrgApacheCommonsIoInputXmlStreamReader_doRawStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withBoolean_(OrgApacheCommonsIoInputXmlStreamReader *self, OrgApacheCommonsIoInputBOMInputStream *bom, OrgApacheCommonsIoInputBOMInputStream *pis, jboolean lenient) {
  NSString *bomEnc = [((OrgApacheCommonsIoInputBOMInputStream *) nil_chk(bom)) getBOMCharsetName];
  NSString *xmlGuessEnc = [((OrgApacheCommonsIoInputBOMInputStream *) nil_chk(pis)) getBOMCharsetName];
  NSString *xmlEnc = OrgApacheCommonsIoInputXmlStreamReader_getXmlPrologWithJavaIoInputStream_withNSString_(pis, xmlGuessEnc);
  @try {
    return [self calculateRawEncodingWithNSString:bomEnc withNSString:xmlGuessEnc withNSString:xmlEnc];
  }
  @catch (OrgApacheCommonsIoInputXmlStreamReaderException *ex) {
    if (lenient) {
      return OrgApacheCommonsIoInputXmlStreamReader_doLenientDetectionWithNSString_withOrgApacheCommonsIoInputXmlStreamReaderException_(self, nil, ex);
    }
    else {
      @throw ex;
    }
  }
}

NSString *OrgApacheCommonsIoInputXmlStreamReader_doHttpStreamWithOrgApacheCommonsIoInputBOMInputStream_withOrgApacheCommonsIoInputBOMInputStream_withNSString_withBoolean_(OrgApacheCommonsIoInputXmlStreamReader *self, OrgApacheCommonsIoInputBOMInputStream *bom, OrgApacheCommonsIoInputBOMInputStream *pis, NSString *httpContentType, jboolean lenient) {
  NSString *bomEnc = [((OrgApacheCommonsIoInputBOMInputStream *) nil_chk(bom)) getBOMCharsetName];
  NSString *xmlGuessEnc = [((OrgApacheCommonsIoInputBOMInputStream *) nil_chk(pis)) getBOMCharsetName];
  NSString *xmlEnc = OrgApacheCommonsIoInputXmlStreamReader_getXmlPrologWithJavaIoInputStream_withNSString_(pis, xmlGuessEnc);
  @try {
    return [self calculateHttpEncodingWithNSString:httpContentType withNSString:bomEnc withNSString:xmlGuessEnc withNSString:xmlEnc withBoolean:lenient];
  }
  @catch (OrgApacheCommonsIoInputXmlStreamReaderException *ex) {
    if (lenient) {
      return OrgApacheCommonsIoInputXmlStreamReader_doLenientDetectionWithNSString_withOrgApacheCommonsIoInputXmlStreamReaderException_(self, httpContentType, ex);
    }
    else {
      @throw ex;
    }
  }
}

NSString *OrgApacheCommonsIoInputXmlStreamReader_doLenientDetectionWithNSString_withOrgApacheCommonsIoInputXmlStreamReaderException_(OrgApacheCommonsIoInputXmlStreamReader *self, NSString *httpContentType, OrgApacheCommonsIoInputXmlStreamReaderException *ex) {
  if (httpContentType != nil && [httpContentType java_hasPrefix:@"text/html"]) {
    httpContentType = [httpContentType java_substring:[@"text/html" java_length]];
    httpContentType = JreStrcat("$$", @"text/xml", httpContentType);
    @try {
      return [self calculateHttpEncodingWithNSString:httpContentType withNSString:[((OrgApacheCommonsIoInputXmlStreamReaderException *) nil_chk(ex)) getBomEncoding] withNSString:[ex getXmlGuessEncoding] withNSString:[ex getXmlEncoding] withBoolean:true];
    }
    @catch (OrgApacheCommonsIoInputXmlStreamReaderException *ex2) {
      ex = ex2;
    }
  }
  NSString *encoding = [((OrgApacheCommonsIoInputXmlStreamReaderException *) nil_chk(ex)) getXmlEncoding];
  if (encoding == nil) {
    encoding = [ex getContentTypeEncoding];
  }
  if (encoding == nil) {
    encoding = self->defaultEncoding_ == nil ? OrgApacheCommonsIoInputXmlStreamReader_UTF_8 : self->defaultEncoding_;
  }
  return encoding;
}

NSString *OrgApacheCommonsIoInputXmlStreamReader_getContentTypeMimeWithNSString_(NSString *httpContentType) {
  OrgApacheCommonsIoInputXmlStreamReader_initialize();
  NSString *mime = nil;
  if (httpContentType != nil) {
    jint i = [httpContentType java_indexOfString:@";"];
    if (i >= 0) {
      mime = [httpContentType java_substring:0 endIndex:i];
    }
    else {
      mime = httpContentType;
    }
    mime = [((NSString *) nil_chk(mime)) java_trim];
  }
  return mime;
}

NSString *OrgApacheCommonsIoInputXmlStreamReader_getContentTypeEncodingWithNSString_(NSString *httpContentType) {
  OrgApacheCommonsIoInputXmlStreamReader_initialize();
  NSString *encoding = nil;
  if (httpContentType != nil) {
    jint i = [httpContentType java_indexOfString:@";"];
    if (i > -1) {
      NSString *postMime = [httpContentType java_substring:i + 1];
      JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(OrgApacheCommonsIoInputXmlStreamReader_CHARSET_PATTERN)) matcherWithJavaLangCharSequence:postMime];
      encoding = [((JavaUtilRegexMatcher *) nil_chk(m)) find] ? [m groupWithInt:1] : nil;
      encoding = encoding != nil ? [encoding java_uppercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)] : nil;
    }
  }
  return encoding;
}

NSString *OrgApacheCommonsIoInputXmlStreamReader_getXmlPrologWithJavaIoInputStream_withNSString_(JavaIoInputStream *is, NSString *guessedEnc) {
  OrgApacheCommonsIoInputXmlStreamReader_initialize();
  NSString *encoding = nil;
  if (guessedEnc != nil) {
    IOSByteArray *bytes = [IOSByteArray arrayWithLength:OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE];
    [((JavaIoInputStream *) nil_chk(is)) markWithInt:OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE];
    jint offset = 0;
    jint max = OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE;
    jint c = [is readWithByteArray:bytes withInt:offset withInt:max];
    jint firstGT = -1;
    NSString *xmlProlog = nil;
    while (c != -1 && firstGT == -1 && offset < OrgApacheCommonsIoInputXmlStreamReader_BUFFER_SIZE) {
      offset += c;
      max -= c;
      c = [is readWithByteArray:bytes withInt:offset withInt:max];
      xmlProlog = [NSString java_stringWithBytes:bytes offset:0 length:offset charsetName:guessedEnc];
      firstGT = [xmlProlog java_indexOf:'>'];
    }
    if (firstGT == -1) {
      if (c == -1) {
        @throw create_JavaIoIOException_initWithNSString_(@"Unexpected end of XML stream");
      }
      else {
        @throw create_JavaIoIOException_initWithNSString_(JreStrcat("$I$", @"XML prolog or ROOT element not found on first ", offset, @" bytes"));
      }
    }
    jint bytesRead = offset;
    if (bytesRead > 0) {
      [is reset];
      JavaIoBufferedReader *bReader = create_JavaIoBufferedReader_initWithJavaIoReader_(create_JavaIoStringReader_initWithNSString_([((NSString *) nil_chk(xmlProlog)) java_substring:0 endIndex:firstGT + 1]));
      JavaLangStringBuffer *prolog = create_JavaLangStringBuffer_init();
      NSString *line = [bReader readLine];
      while (line != nil) {
        [prolog appendWithNSString:line];
        line = [bReader readLine];
      }
      JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(OrgApacheCommonsIoInputXmlStreamReader_ENCODING_PATTERN)) matcherWithJavaLangCharSequence:prolog];
      if ([((JavaUtilRegexMatcher *) nil_chk(m)) find]) {
        encoding = [((NSString *) nil_chk([m groupWithInt:1])) uppercaseString];
        encoding = [((NSString *) nil_chk(encoding)) java_substring:1 endIndex:[encoding java_length] - 1];
      }
    }
  }
  return encoding;
}

jboolean OrgApacheCommonsIoInputXmlStreamReader_isAppXmlWithNSString_(NSString *mime) {
  OrgApacheCommonsIoInputXmlStreamReader_initialize();
  return mime != nil && ([mime isEqual:@"application/xml"] || [mime isEqual:@"application/xml-dtd"] || [mime isEqual:@"application/xml-external-parsed-entity"] || ([mime java_hasPrefix:@"application/"] && [mime java_hasSuffix:@"+xml"]));
}

jboolean OrgApacheCommonsIoInputXmlStreamReader_isTextXmlWithNSString_(NSString *mime) {
  OrgApacheCommonsIoInputXmlStreamReader_initialize();
  return mime != nil && ([mime isEqual:@"text/xml"] || [mime isEqual:@"text/xml-external-parsed-entity"] || ([mime java_hasPrefix:@"text/"] && [mime java_hasSuffix:@"+xml"]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsIoInputXmlStreamReader)
