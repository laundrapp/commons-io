//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/input/ReversedLinesFileReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoInputReversedLinesFileReader")
#ifdef RESTRICT_OrgApacheCommonsIoInputReversedLinesFileReader
#define INCLUDE_ALL_OrgApacheCommonsIoInputReversedLinesFileReader 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoInputReversedLinesFileReader 1
#endif
#undef RESTRICT_OrgApacheCommonsIoInputReversedLinesFileReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoInputReversedLinesFileReader_) && (INCLUDE_ALL_OrgApacheCommonsIoInputReversedLinesFileReader || defined(INCLUDE_OrgApacheCommonsIoInputReversedLinesFileReader))
#define OrgApacheCommonsIoInputReversedLinesFileReader_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class JavaIoFile;
@class JavaNioCharsetCharset;

/*!
 @brief Reads lines in a file reversely (similar to a BufferedReader, but starting at
  the last line).Useful for e.g. searching in log files.
 @since 2.2
 */
@interface OrgApacheCommonsIoInputReversedLinesFileReader : NSObject < JavaIoCloseable >

#pragma mark Public

/*!
 @brief Creates a ReversedLinesFileReader with default block size of 4KB and the
  platform's default encoding.
 @param file the file to be read
 @throw IOExceptionif an I/O error occurs
 */
- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file;

/*!
 @brief Creates a ReversedLinesFileReader with the given block size and encoding.
 @param file the file to be read
 @param blockSize size of the internal buffer (for ideal performance this should
              match with the block size of the underlying file system).
 @param encoding the encoding of the file
 @throw IOExceptionif an I/O error occurs
 @since 2.3
 */
- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file
                                     withInt:(jint)blockSize
                   withJavaNioCharsetCharset:(JavaNioCharsetCharset *)encoding;

/*!
 @brief Creates a ReversedLinesFileReader with the given block size and encoding.
 @param file the file to be read
 @param blockSize size of the internal buffer (for ideal performance this should
              match with the block size of the underlying file system).
 @param encoding the encoding of the file
 @throw IOExceptionif an I/O error occurs
 @throw UnsupportedCharsetException
 thrown instead of <code>UnsupportedEncodingException</code> in version 2.2 if the encoding is not
              supported.
 */
- (instancetype __nonnull)initWithJavaIoFile:(JavaIoFile *)file
                                     withInt:(jint)blockSize
                                withNSString:(NSString *)encoding;

/*!
 @brief Closes underlying resources.
 @throw IOExceptionif an I/O error occurs
 */
- (void)close;

/*!
 @brief Returns the lines of the file from bottom to top.
 @return the next line or null if the start of the file is reached
 @throw IOExceptionif an I/O error occurs
 */
- (NSString *)readLine;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoInputReversedLinesFileReader)

FOUNDATION_EXPORT void OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_(OrgApacheCommonsIoInputReversedLinesFileReader *self, JavaIoFile *file);

FOUNDATION_EXPORT OrgApacheCommonsIoInputReversedLinesFileReader *new_OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_(JavaIoFile *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputReversedLinesFileReader *create_OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_(JavaIoFile *file);

FOUNDATION_EXPORT void OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_withInt_withJavaNioCharsetCharset_(OrgApacheCommonsIoInputReversedLinesFileReader *self, JavaIoFile *file, jint blockSize, JavaNioCharsetCharset *encoding);

FOUNDATION_EXPORT OrgApacheCommonsIoInputReversedLinesFileReader *new_OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_withInt_withJavaNioCharsetCharset_(JavaIoFile *file, jint blockSize, JavaNioCharsetCharset *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputReversedLinesFileReader *create_OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_withInt_withJavaNioCharsetCharset_(JavaIoFile *file, jint blockSize, JavaNioCharsetCharset *encoding);

FOUNDATION_EXPORT void OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_withInt_withNSString_(OrgApacheCommonsIoInputReversedLinesFileReader *self, JavaIoFile *file, jint blockSize, NSString *encoding);

FOUNDATION_EXPORT OrgApacheCommonsIoInputReversedLinesFileReader *new_OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_withInt_withNSString_(JavaIoFile *file, jint blockSize, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputReversedLinesFileReader *create_OrgApacheCommonsIoInputReversedLinesFileReader_initWithJavaIoFile_withInt_withNSString_(JavaIoFile *file, jint blockSize, NSString *encoding);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoInputReversedLinesFileReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoInputReversedLinesFileReader")
