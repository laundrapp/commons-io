//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/input/BrokenInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoInputBrokenInputStream")
#ifdef RESTRICT_OrgApacheCommonsIoInputBrokenInputStream
#define INCLUDE_ALL_OrgApacheCommonsIoInputBrokenInputStream 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoInputBrokenInputStream 1
#endif
#undef RESTRICT_OrgApacheCommonsIoInputBrokenInputStream

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheCommonsIoInputBrokenInputStream_) && (INCLUDE_ALL_OrgApacheCommonsIoInputBrokenInputStream || defined(INCLUDE_OrgApacheCommonsIoInputBrokenInputStream))
#define OrgApacheCommonsIoInputBrokenInputStream_

#define RESTRICT_JavaIoInputStream 1
#define INCLUDE_JavaIoInputStream 1
#include "java/io/InputStream.h"

@class JavaIoIOException;

/*!
 @brief Broken input stream.This stream always throws an <code>IOException</code> from
  all the <code>InputStream</code> methods where the exception is declared.
 <p>
  This class is mostly useful for testing error handling in code that uses an
  input stream.
 @since 2.0
 */
@interface OrgApacheCommonsIoInputBrokenInputStream : JavaIoInputStream

#pragma mark Public

/*!
 @brief Creates a new stream that always throws an <code>IOException</code>
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates a new stream that always throws the given exception.
 @param exception the exception to be thrown
 */
- (instancetype __nonnull)initWithJavaIoIOException:(JavaIoIOException *)exception;

/*!
 @brief Throws the configured exception.
 @return nothing
 @throw IOExceptionalways thrown
 */
- (jint)available;

/*!
 @brief Throws the configured exception.
 @throw IOExceptionalways thrown
 */
- (void)close;

/*!
 @brief Throws the configured exception.
 @return nothing
 @throw IOExceptionalways thrown
 */
- (jint)read;

/*!
 @brief Throws the configured exception.
 @throw IOExceptionalways thrown
 */
- (void)reset;

/*!
 @brief Throws the configured exception.
 @param n ignored
 @return nothing
 @throw IOExceptionalways thrown
 */
- (jlong)skipWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoInputBrokenInputStream)

FOUNDATION_EXPORT void OrgApacheCommonsIoInputBrokenInputStream_initWithJavaIoIOException_(OrgApacheCommonsIoInputBrokenInputStream *self, JavaIoIOException *exception);

FOUNDATION_EXPORT OrgApacheCommonsIoInputBrokenInputStream *new_OrgApacheCommonsIoInputBrokenInputStream_initWithJavaIoIOException_(JavaIoIOException *exception) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputBrokenInputStream *create_OrgApacheCommonsIoInputBrokenInputStream_initWithJavaIoIOException_(JavaIoIOException *exception);

FOUNDATION_EXPORT void OrgApacheCommonsIoInputBrokenInputStream_init(OrgApacheCommonsIoInputBrokenInputStream *self);

FOUNDATION_EXPORT OrgApacheCommonsIoInputBrokenInputStream *new_OrgApacheCommonsIoInputBrokenInputStream_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputBrokenInputStream *create_OrgApacheCommonsIoInputBrokenInputStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoInputBrokenInputStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoInputBrokenInputStream")
