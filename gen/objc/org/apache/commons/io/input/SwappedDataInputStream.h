//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/input/SwappedDataInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoInputSwappedDataInputStream")
#ifdef RESTRICT_OrgApacheCommonsIoInputSwappedDataInputStream
#define INCLUDE_ALL_OrgApacheCommonsIoInputSwappedDataInputStream 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoInputSwappedDataInputStream 1
#endif
#undef RESTRICT_OrgApacheCommonsIoInputSwappedDataInputStream

#if !defined (OrgApacheCommonsIoInputSwappedDataInputStream_) && (INCLUDE_ALL_OrgApacheCommonsIoInputSwappedDataInputStream || defined(INCLUDE_OrgApacheCommonsIoInputSwappedDataInputStream))
#define OrgApacheCommonsIoInputSwappedDataInputStream_

#define RESTRICT_OrgApacheCommonsIoInputProxyInputStream 1
#define INCLUDE_OrgApacheCommonsIoInputProxyInputStream 1
#include "org/apache/commons/io/input/ProxyInputStream.h"

#define RESTRICT_JavaIoDataInput 1
#define INCLUDE_JavaIoDataInput 1
#include "java/io/DataInput.h"

@class IOSByteArray;
@class JavaIoInputStream;

/*!
 @brief DataInput for systems relying on little endian data formats.
 When read, values will be changed from little endian to big 
  endian formats for internal usage.  
 <p>
  <b>Origin of code: </b>Avalon Excalibur (IO)
 @version CVS $Revision: 1302050 $
 */
@interface OrgApacheCommonsIoInputSwappedDataInputStream : OrgApacheCommonsIoInputProxyInputStream < JavaIoDataInput >

#pragma mark Public

/*!
 @brief Constructs a SwappedDataInputStream.
 @param input InputStream to read from
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)input;

/*!
 @brief Return <code><code>readByte()</code> !
 = 0</code>
 @return false if the byte read is zero, otherwise true
 @throw IOExceptionif an I/O error occurs
 @throw EOFExceptionif an end of file is reached unexpectedly
 */
- (jboolean)readBoolean;

/*!
 @brief Invokes the delegate's <code>read()</code> method.
 @return the byte read or -1 if the end of stream
 @throw IOExceptionif an I/O error occurs
 @throw EOFExceptionif an end of file is reached unexpectedly
 */
- (jbyte)readByte;

/*!
 @brief Reads a character delegating to <code>readShort()</code>.
 @return the byte read or -1 if the end of stream
 @throw IOExceptionif an I/O error occurs
 @throw EOFExceptionif an end of file is reached unexpectedly
 */
- (jchar)readChar;

/*!
 @brief Delegates to <code>EndianUtils.readSwappedDouble(InputStream)</code>.
 @return the read long
 @throw IOExceptionif an I/O error occurs
 @throw EOFExceptionif an end of file is reached unexpectedly
 */
- (jdouble)readDouble;

/*!
 @brief Delegates to <code>EndianUtils.readSwappedFloat(InputStream)</code>.
 @return the read long
 @throw IOExceptionif an I/O error occurs
 @throw EOFExceptionif an end of file is reached unexpectedly
 */
- (jfloat)readFloat;

/*!
 @brief Invokes the delegate's <code>read(byte[] data, int, int)</code> method.
 @param data the buffer to read the bytes into
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (void)readFullyWithByteArray:(IOSByteArray *)data;

/*!
 @brief Invokes the delegate's <code>read(byte[] data, int, int)</code> method.
 @param data the buffer to read the bytes into
 @param offset The start offset
 @param length The number of bytes to read
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (void)readFullyWithByteArray:(IOSByteArray *)data
                       withInt:(jint)offset
                       withInt:(jint)length;

/*!
 @brief Delegates to <code>EndianUtils.readSwappedInteger(InputStream)</code>.
 @return the read long
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (jint)readInt;

/*!
 @brief Not currently supported - throws <code>UnsupportedOperationException</code>.
 @return the line read
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (NSString *)readLine;

/*!
 @brief Delegates to <code>EndianUtils.readSwappedLong(InputStream)</code>.
 @return the read long
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (jlong)readLong;

/*!
 @brief Delegates to <code>EndianUtils.readSwappedShort(InputStream)</code>.
 @return the read long
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (jshort)readShort;

/*!
 @brief Invokes the delegate's <code>read()</code> method.
 @return the byte read or -1 if the end of stream
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (jint)readUnsignedByte;

/*!
 @brief Delegates to <code>EndianUtils.readSwappedUnsignedShort(InputStream)</code>.
 @return the read long
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (jint)readUnsignedShort;

/*!
 @brief Not currently supported - throws <code>UnsupportedOperationException</code>.
 @return UTF String read
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (NSString *)readUTF;

/*!
 @brief Invokes the delegate's <code>skip(int)</code> method.
 @param count the number of bytes to skip
 @return the number of bytes to skipped or -1 if the end of stream
 @throw EOFExceptionif an end of file is reached unexpectedly
 @throw IOExceptionif an I/O error occurs
 */
- (jint)skipBytesWithInt:(jint)count;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoInputSwappedDataInputStream)

FOUNDATION_EXPORT void OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(OrgApacheCommonsIoInputSwappedDataInputStream *self, JavaIoInputStream *input);

FOUNDATION_EXPORT OrgApacheCommonsIoInputSwappedDataInputStream *new_OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(JavaIoInputStream *input) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputSwappedDataInputStream *create_OrgApacheCommonsIoInputSwappedDataInputStream_initWithJavaIoInputStream_(JavaIoInputStream *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoInputSwappedDataInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoInputSwappedDataInputStream")
