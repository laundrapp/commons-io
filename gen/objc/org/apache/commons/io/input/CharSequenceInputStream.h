//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/commons-io/src/main/java/org/apache/commons/io/input/CharSequenceInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsIoInputCharSequenceInputStream")
#ifdef RESTRICT_OrgApacheCommonsIoInputCharSequenceInputStream
#define INCLUDE_ALL_OrgApacheCommonsIoInputCharSequenceInputStream 0
#else
#define INCLUDE_ALL_OrgApacheCommonsIoInputCharSequenceInputStream 1
#endif
#undef RESTRICT_OrgApacheCommonsIoInputCharSequenceInputStream

#if !defined (OrgApacheCommonsIoInputCharSequenceInputStream_) && (INCLUDE_ALL_OrgApacheCommonsIoInputCharSequenceInputStream || defined(INCLUDE_OrgApacheCommonsIoInputCharSequenceInputStream))
#define OrgApacheCommonsIoInputCharSequenceInputStream_

#define RESTRICT_JavaIoInputStream 1
#define INCLUDE_JavaIoInputStream 1
#include "java/io/InputStream.h"

@class IOSByteArray;
@class JavaNioCharsetCharset;
@protocol JavaLangCharSequence;

/*!
 @brief <code>InputStream</code> implementation that can read from String, StringBuffer,
  StringBuilder or CharBuffer.
 <p>
  <strong>Note:</strong> Supports <code>mark(int)</code> and <code>reset()</code>.
 @since 2.2
 */
@interface OrgApacheCommonsIoInputCharSequenceInputStream : JavaIoInputStream

#pragma mark Public

/*!
 @brief Constructor, calls <code>Charset, int)</code>
  with a buffer size of 2048.
 @param s the input character sequence
 @param charset the character set name to use
 */
- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                   withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

/*!
 @brief Constructor.
 @param s the input character sequence
 @param charset the character set name to use
 @param bufferSize the buffer size to use.
 */
- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                   withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset
                                     withInt:(jint)bufferSize;

/*!
 @brief Constructor, calls <code>String, int)</code>
  with a buffer size of 2048.
 @param s the input character sequence
 @param charset the character set name to use
 */
- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                withNSString:(NSString *)charset;

/*!
 @brief Constructor, calls <code>Charset, int)</code>.
 @param s the input character sequence
 @param charset the character set name to use
 @param bufferSize the buffer size to use.
 */
- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)s
                                withNSString:(NSString *)charset
                                     withInt:(jint)bufferSize;

- (jint)available;

- (void)close;

/*!
 @param readlimit max read limit (ignored)
 */
- (void)markWithInt:(jint)readlimit;

- (jboolean)markSupported;

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)b;

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

- (void)reset;

- (jlong)skipWithLong:(jlong)n;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsIoInputCharSequenceInputStream)

FOUNDATION_EXPORT void OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withJavaNioCharsetCharset_withInt_(OrgApacheCommonsIoInputCharSequenceInputStream *self, id<JavaLangCharSequence> s, JavaNioCharsetCharset *charset, jint bufferSize);

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *new_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withJavaNioCharsetCharset_withInt_(id<JavaLangCharSequence> s, JavaNioCharsetCharset *charset, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *create_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withJavaNioCharsetCharset_withInt_(id<JavaLangCharSequence> s, JavaNioCharsetCharset *charset, jint bufferSize);

FOUNDATION_EXPORT void OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withNSString_withInt_(OrgApacheCommonsIoInputCharSequenceInputStream *self, id<JavaLangCharSequence> s, NSString *charset, jint bufferSize);

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *new_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withNSString_withInt_(id<JavaLangCharSequence> s, NSString *charset, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *create_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withNSString_withInt_(id<JavaLangCharSequence> s, NSString *charset, jint bufferSize);

FOUNDATION_EXPORT void OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withJavaNioCharsetCharset_(OrgApacheCommonsIoInputCharSequenceInputStream *self, id<JavaLangCharSequence> s, JavaNioCharsetCharset *charset);

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *new_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withJavaNioCharsetCharset_(id<JavaLangCharSequence> s, JavaNioCharsetCharset *charset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *create_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withJavaNioCharsetCharset_(id<JavaLangCharSequence> s, JavaNioCharsetCharset *charset);

FOUNDATION_EXPORT void OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withNSString_(OrgApacheCommonsIoInputCharSequenceInputStream *self, id<JavaLangCharSequence> s, NSString *charset);

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *new_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withNSString_(id<JavaLangCharSequence> s, NSString *charset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsIoInputCharSequenceInputStream *create_OrgApacheCommonsIoInputCharSequenceInputStream_initWithJavaLangCharSequence_withNSString_(id<JavaLangCharSequence> s, NSString *charset);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsIoInputCharSequenceInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsIoInputCharSequenceInputStream")
